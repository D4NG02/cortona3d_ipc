{"version":3,"sources":["webpack://Cortona3DSoloTag/webpack/universalModuleDefinition","webpack://Cortona3DSoloTag/webpack/bootstrap","webpack://Cortona3DSoloTag/B:/JSPS-SOLO-JOB1/packages/solo-tag/src/index.js","webpack://Cortona3DSoloTag/B:/JSPS-SOLO-JOB1/packages/solo-core/src/res/stella.framework.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Stella","Cortona3DSolo","tag","use","then","events","config","useBackwardCompatibilityMode","on_model_reset","on_initialize","on_section_loaded","on_section_unloaded","on_click_object","on_over_object","on_over","Model3D","instance","dispatch","stella","lastFlashedDot","lastHoveredItem","theModel","kDotDefaults","areaData","color","location","Location","normal","sectionID","shapeType","structureClass","texture","type","vp_orientation","vp_position","kDotTypeNames","kPredefinedViews","kUseXMLDOM","newbornDot","zsections","isPlotMode","x","y","z","this","Viewpoint","position","orientation","centerpoint","float3_asArray","getValue","float4_asArray","float3_asLocation","float3_fromArray","array","setValue","float4_fromArray","float3_fromLocation","defaultToString","constructor","f","Array","Dot","id","defineProperties","writable","configurable","set","_peer","_dotWillChangeID","dotDidAttachToModel","dot","model","state","Module","_stella_item_release","_stella_dot_create","ccall","_stella_model_addRepairDot","_state","dotGetState","dotDidDetachFromModel","_stella_model_removeRepairDot","Section","url","isLoaded","getClosestSectionStructures","sectionImpl","maxDistance","method","structureClasses","res","items","sp","stackSave","count","length","carray","stackAlloc","intArrayFromString","stackRestore","push","UTF8ToString","Vec3f","_free","sectionDidAttachToModel","section","_stella_section_release","_stella_model_addSection","meta","metadata","ids","split","sectionCode","sectionIdToCode","translation","coordAirplaneFuselageToVRML","getOffsetForSection","sectionDidDetachFromModel","_stella_model_removeSection","_rebuildStructures","getStructureClassFromName","indexOf","substr","Structure","peer","_stella_item_retain","StructureClass","getObjectList","list","names","defineReadOnlyCollection","impl","itemID","result","defineCollection","ctor","itemDidAttachToModel","itemDidDetachFromModel","item","dots","sections","structures","dotsCollection","sectionsCollection","structuresCollection","structureClassesCollection","nullObject","DEFAULT_TRANSPARENCY_LEVEL","MOUSE_MOVE_SENSITIVITY","SKIP_TRANSPARENT_OBJECT","SKIP_TRANSPARENT_OBJECT_ON_CLICK","TOOLTIP_DELAY","ENABLE_TOOLTIPS","DOT_FLASH_INTERVAL","DOT_FLASH_FREQUENCY","ALL_CLASS_VISIBLE_ON_LOAD","SKIN_STRUCTURE_LIST","DOT_TO_STRUCTURE_DISTANCE","AC_SCALE_POWER","areaContourOffset","areaSurfaceOffset","maxAreaEdgeLength","Metadata","_stella_model_getDotAppearance","_stella_model_setDotAppearance","_stella_model_areRepairDotsHidden","visible","_stella_model_setRepairDotsHidden","add","remove","clear","toArray","dotID","_stella_model_getNewbornDot","_stella_item_getID","dotType","_stella_model_endPlotMode","_stella_model_buildAreaDot","_stella_model_removeLastAreaPoint","pt","_stella_model_copyNearestElementList","hasStructures","skipTransparent","getNearestStructures","slice","bulk","vp","String","_stella_model_fitSceneWithPredefinedView","_stella_dot_getViewpoint","HEAPU8","subarray","_stella_item_getCenter","_stella_model_setCameraPosition","stopFlash","flash","_stella_model_fitItem","animated","center","valid","adjustCamera","_stella_model_setRotationCenter","_stella_model_alignCamera","_stella_model_fitScene","structure","_stella_model_setOSAxisHidden","_tiramisu_setRotationCenterVisibility","tooltipOver3D","hide","tooltipElement","tooltip","Tooltip","delay","elements","hidden","dotsHidden","sectionBeingUnloaded","_stella_model_copyStructureList","_stella_model_copyStructureClassList","newID","existingDot","modifierKeys","itemType","show","className","visibility","translucent","transparency","radius","getStructuresInSphere","getStructuresAcrossFuselage","structureName","getDistanceToPoint","Math","min","rotation","_stella_model_getModelRotation","Rotation","_stella_model_setModelRotation","AirplaneBoundBox","AirplaneFuselageLocation","size","bsta","bwl","bbl","BSTA","BWL","BBL","ZSection","xmlURL","wrlURL","xmlAutoload","pendingVisibleZones","loadContext","setZoneVisibility","doc","zoneID","shapes","zone","selectSingleNode","selectNodes","nodeValue","join","loadXMLDocument","xmlSyntax","success","_document","DOMParser","parseFromString","ActiveXObject","async","loadXML","console","log","onload","onerror","didFinishLoadSection","didFailLoadSection","documentStatus","sceneStatus","errorText","_stella_model_unloadZones","splice","dom","self","docProperty","xhr","XMLHttpRequest","open","responseType","overrideMimeType","status","responseXML","statusText","send","onreadystatechange","readyState","parseError","errorCode","reason","load","_round","precision","mult","round","pow","max","ATA","ata","description","text","tooltipNode","timeout","tooltipX","tooltipY","TOOLTIP_DX","TOOLTIP_DY","syntax","dx","dy","innerHTML","arguments","clearTimeout","setTimeout","parentRect","parentNode","getBoundingClientRect","left","right","offsetWidth","top","bottom","offsetHeight","style","classList","angle","setAxis","FLT_EPSILON","v","normalize","v1","axis","cross","len","PI","atan2","toString","str","_stella_model_getCameraPosition","sz","data","_stella_dot_copyAreaData","_stella_dot_getColor","_stella_dot_setColor","_stella_dot_getLocation","_stella_dot_setLocation","_stella_dot_getNormal","_stella_dot_setNormal","_stella_dot_getShapeType","_stella_dot_setShapeType","_stella_dot_getTextureType","_stella_dot_setTextureType","_stella_dot_getType","_stella_dot_setType","_stella_dot_getSectionID","_stella_dot_getStructureClass","vec","_stella_dot_setViewpoint","rot","_stella_item_isHidden","_stella_item_setHidden","highlighted","_stella_item_setHighlighted","duration","frequency","_stella_dot_flash","_stella_dot_cancelFlash","dolly","_stella_section_isHidden","_stella_section_setHidden","_stella_section_getTranslation","_stella_section_setTranslation","_stella_section_areRepairDotsHidden","_stella_section_setRepairDotsHidden","wasLoaded","_stella_section_unload","_stella_element_getTransparency","_stella_element_setTransparency","_stella_element_setColor","_stella_element_restoreColor","_stella_element_getDistanceToPoint","Element","xpath","ownerDocument","evaluate","XPathResult","FIRST_ORDERED_NODE_TYPE","singleNodeValue","ORDERED_NODE_ITERATOR_TYPE","nodes","iterateNext","XMLDocument","fromXMLNode","xmlnode","isInside","airplaneFuselageLocation","abs","isEmpty","node","attributesAssoc","attributes","parseFloat","getAttribute","exception","getBLSideString","_didFinishLoad","zones","elementName","pointLocation","coordX","coordY","coordZ","j","planes","acceptablePlanes","nearestZone","shortestDistance","boxDistance","boxes","hasElementName","zonesWithItem","sectionCodeToId","isAvailable","code","documentElement","offset","k","coordVRMLToAirplaneFuselage","coordBSTAToExtendedBSTA","ins","lastBefore","firstAfter","dist","delta","frames","insertions","tagName","e","coordExtendedBSTAToBSTA","sBSTA","arr","base","plus","srcLetter","foundPlus","foundLetter","width","letter","toUpperCase","replace","isNaN","substring","getSectionBB","bbox","getAirplaneSectionsForLocation","getFuselageSectionsForLocation","sectioncode","chooseViewpoint","cv","viewpoint","_stella_utility_getBestViewpoint","getATAForZone","zSection","assoc","sectionNode","getSectionId","getAllElementsInZone","sort","sin","cos","g","h","Sab","Sa","Ca","As","getAxis","multiply","Sb","Cb","Bs","Cab","ABs","msq","sqrt","divide","Tiramisu","willStartNavigateInScene"],"mappings":"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","file":"Cortona3DSoloTag.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Cortona3DSoloTag\"] = factory();\n\telse\n\t\troot[\"Cortona3DSoloTag\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\r\n * The namespace represents an application interface to provide <a href=\"Tag/index.html\">Cortona3D Tag JavaScript API</a>.\r\n * \r\n * @example\r\n * Cortona3DSolo.use('tag');\r\n * Cortona3DSolo.app.initialize()\r\n *     .then(function () {\r\n *          // Use Cortona3D Tag JavaScript API here.\r\n *          var m_model3D = new Cortona3DSolo.tag.Model3D();\r\n *          // ...\r\n *          // By default, events of the Model3D object are translated as \"tag.*\" events of the Solo library.\r\n *          Cortona3DSolo.on('tag.onSectionLoaded', function (section) {\r\n *              // ...\r\n *          });\r\n *     });\r\n * \r\n * @example <caption>Using backward compatibility mode</caption>\r\n * // For backward compatibility, you can use the \"useBackwardCompatibilityMode\" option of the \"tag\" module.\r\n * Cortona3DSolo.use('tag', {\r\n *      useBackwardCompatibilityMode: true\r\n * });\r\n * Cortona3DSolo.app.initialize()\r\n *     .then(function () {\r\n *          // Use Cortona3D Tag JavaScript API here.\r\n *          // All properties of the \"Cortona3DSolo.tag\" namespace are exported to the global object.\r\n *          var m_model3D = new Model3D();\r\n *          // ...\r\n *          // Event handlers from the Model3D object must be used instead of \"tag.*\" events of the Solo library.\r\n *          m_model3D.on_section_loaded = function (section) {\r\n *              // ...\r\n *          };\r\n *     });\r\n * \r\n * @namespace tag\r\n * @memberof module:solo\r\n * @since 1.7.2\r\n */\r\nvar Stella = require('@cortona3d/solo-core/src/res/stella.framework');\r\n\r\nif (typeof Cortona3DSolo != 'undefined') {\r\n    Cortona3DSolo.tag = Stella;\r\n\r\n    Cortona3DSolo.use('tag')\r\n        .then(function (module) {\r\n            var key,\r\n                events;\r\n            if (module.config.useBackwardCompatibilityMode) {\r\n                // Import properties from the Stella namespace to the global object for the sake of backward compatibility.\r\n                for (key in Stella) {\r\n                    window[key] = Stella[key];\r\n                }\r\n            } else {\r\n                // Use Solo events instead of Stella.Model3D hook methods.\r\n                events = {\r\n                    on_model_reset: 'tag.onModelReset',\r\n                    on_initialize: 'tag.onInitialize',\r\n                    on_section_loaded: 'tag.onSectionLoaded',\r\n                    on_section_unloaded: 'tag.onSectionUnloaded',\r\n                    on_click_object: 'tag.onClickObject',\r\n                    on_over_object: 'tag.onOverObject',\r\n                    on_over: 'tag.onOver'\r\n                };\r\n\r\n                for (key in events) {\r\n                    Object.defineProperty(Stella.Model3D.instance, key, {\r\n                        value: Cortona3DSolo.dispatch.bind(Cortona3DSolo, events[key]),\r\n                        enumerable: true\r\n                    });\r\n                }\r\n            }\r\n        });\r\n\r\n}\r\n\r\n/**\r\n * The hook method is invoked when method `Model3D.reset()` is called.\r\n * Used instead of the `on_model_reset` event handler from the `Model3D` namespace.\r\n * \r\n * @memberof module:solo.tag\r\n * @abstract \r\n * @function onModelReset\r\n * @see The corresponding event {@link event:\"tag.onModelReset\" \"tag.onModelReset\"}\r\n */\r\n/**\r\n * @event \"tag.onModelReset\"\r\n * @see The corresponding hook method {@link module:solo.tag.onModelReset tag.onModelReset()}\r\n */\r\n\r\n/**\r\n * The hook method is invoked when method `Model3D.initialize()` is called.\r\n * Used instead of the `on_initialize` event handler from the `Model3D` namespace.\r\n * \r\n * @memberof module:solo.tag\r\n * @abstract \r\n * @function onInitialize\r\n * @see The corresponding event {@link event:\"tag.onInitialize\" \"tag.onInitialize\"}\r\n */\r\n/**\r\n * @event \"tag.onInitialize\"\r\n * @see The corresponding hook method {@link module:solo.tag.onInitialize tag.onInitialize()}\r\n */\r\n\r\n/**\r\n * The hook method is invoked when the 3D model of the section is loaded.\r\n * Used instead of the `on_section_loaded` event handler from the `Model3D` namespace.\r\n * \r\n * @memberof module:solo.tag\r\n * @abstract \r\n * @function onSectionLoaded\r\n * @param {module:solo.tag.Section} section\r\n * @see The corresponding event {@link event:\"tag.onSectionLoaded\" \"tag.onSectionLoaded\"}\r\n */\r\n/**\r\n * @event \"tag.onSectionLoaded\"\r\n * @see The corresponding hook method {@link module:solo.tag.onSectionLoaded tag.onSectionLoaded()}\r\n */\r\n\r\n/**\r\n * The hook method is invoked when the 3D model of the section is unloaded.\r\n * Used instead of the `on_section_unloaded` event handler from the `Model3D` namespace.\r\n * \r\n * @memberof module:solo.tag\r\n * @abstract \r\n * @function onSectionUnloaded\r\n * @param {module:solo.tag.Section} section\r\n * @see The corresponding event {@link event:\"tag.onSectionUnloaded\" \"tag.onSectionUnloaded\"}\r\n */\r\n/**\r\n * @event \"tag.onSectionUnloaded\"\r\n * @see The corresponding hook method {@link module:solo.tag.onSectionUnloaded tag.onSectionUnloaded()}\r\n */\r\n\r\n/**\r\n * The hook method is invoked when the user clicks an object in the 3D window.\r\n * Used instead of the `on_click_object` event handler from the `Model3D` namespace.\r\n * \r\n * @memberof module:solo.tag\r\n * @abstract \r\n * @function onClickObject\r\n * @param {module:solo.tag.Location} location\r\n * @param {module:solo.tag.Structure|module:solo.tag.Dot} item\r\n * @param {number} button\r\n * @param {number} modifierKeys\r\n * @see The corresponding event {@link event:\"tag.onClickObject\" \"tag.onClickObject\"}\r\n */\r\n/**\r\n * @event \"tag.onClickObject\"\r\n * @see The corresponding hook method {@link module:solo.tag.onClickObject tag.onClickObject()}\r\n */\r\n\r\n/**\r\n * The hook method is invoked when the user hover an object in the 3D window.\r\n * Used instead of the `on_over_object` event handler from the `Model3D` namespace.\r\n * \r\n * @memberof module:solo.tag\r\n * @abstract \r\n * @function onOverObject\r\n * @param {module:solo.tag.Location} location\r\n * @param {module:solo.tag.Structure|module:solo.tag.Dot|Object} item\r\n * @see The corresponding event {@link event:\"tag.onOverObject\" \"tag.onOverObject\"}\r\n */\r\n/**\r\n * @event \"tag.onOverObject\"\r\n * @see The corresponding hook method {@link module:solo.tag.onOverObject tag.onOverObject()}\r\n */\r\n\r\n/**\r\n * The hook method is invoked when the user moves the cursor over the 3D window.\r\n * Used instead of the `on_over` event handler from the `Model3D` namespace.\r\n * \r\n * @memberof module:solo.tag\r\n * @abstract \r\n * @function onOver\r\n * @param {module:solo.tag.Location} location\r\n * @param {module:solo.tag.Structure|module:solo.tag.Dot|Object} item\r\n * @see The corresponding event {@link event:\"tag.onOver\" \"tag.onOver\"}\r\n */\r\n/**\r\n * @event \"tag.onOver\"\r\n * @see The corresponding hook method {@link module:solo.tag.onOver tag.onOver()}\r\n */\r\n\r\n/** \r\n * The constructor creates an instance of <a href=\"Tag/Location.html\">Location</a> object from <a href=\"Tag/index.html\">Cortona3D Tag JavaScript API</a>.\r\n * @class Location\r\n * @see <a href=\"Tag/Location.html\">Location</a> for further information.\r\n * @memberof module:solo.tag\r\n */\r\n\r\n/** \r\n * The constructor creates an instance of <a href=\"Tag/Dot.html\">Dot</a> object from <a href=\"Tag/index.html\">Cortona3D Tag JavaScript API</a>.\r\n * @class Dot\r\n * @see <a href=\"Tag/Dot.html\">Dot</a> for further information.\r\n * @memberof module:solo.tag\r\n */\r\n\r\n/** \r\n * The constructor creates an instance of <a href=\"Tag/Section.html\">Section</a> object from <a href=\"Tag/index.html\">Cortona3D Tag JavaScript API</a>.\r\n * @class Section\r\n * @see <a href=\"Tag/Section.html\">Section</a> for further information.\r\n * @memberof module:solo.tag\r\n */\r\n\r\n/** \r\n * The constructor creates an instance of <a href=\"Tag/Structure.html\">Structure</a> object from <a href=\"Tag/index.html\">Cortona3D Tag JavaScript API</a>.\r\n * @class Structure\r\n * @see <a href=\"Tag/Structure.html\">Structure</a> for further information.\r\n * @memberof module:solo.tag\r\n */\r\n\r\n/** \r\n * The constructor creates an instance of <a href=\"Tag/Viewpoint.html\">Viewpoint</a> object from <a href=\"Tag/index.html\">Cortona3D Tag JavaScript API</a>.\r\n * @class Viewpoint\r\n * @see <a href=\"Tag/Viewpoint.html\">Viewpoint</a> for further information.\r\n * @memberof module:solo.tag\r\n */\r\n\r\n/** \r\n * The constructor creates an instance of <a href=\"Tag/Model3D.html\">Model3D</a> object from <a href=\"Tag/index.html\">Cortona3D Tag JavaScript API</a>.\r\n * @class Model3D\r\n * @see <a href=\"Tag/Model3D.html\">Model3D</a> for further information.\r\n * @memberof module:solo.tag\r\n */\r\n\r\n/** \r\n * The constructor creates an instance of <a href=\"Tag/ATA.html\">ATA</a> object from <a href=\"Tag/index.html\">Cortona3D Tag JavaScript API</a>.\r\n * @class ATA\r\n * @see <a href=\"Tag/ATA.html\">ATA</a> for further information.\r\n * @memberof module:solo.tag\r\n */\r\n\r\n/** \r\n * The constructor creates an instance of <a href=\"Tag/AirplaneFuselageLocation.html\">AirplaneFuselageLocation</a> object from <a href=\"Tag/index.html\">Cortona3D Tag JavaScript API</a>.\r\n * @class AirplaneFuselageLocation\r\n * @see <a href=\"Tag/AirplaneFuselageLocation.html\">AirplaneFuselageLocation</a> for further information.\r\n * @memberof module:solo.tag\r\n */\r\n\r\n/** \r\n * The constructor creates an instance of <a href=\"Tag/AirplaneBoundBox.html\">AirplaneBoundBox</a> object from <a href=\"Tag/index.html\">Cortona3D Tag JavaScript API</a>.\r\n * @class AirplaneBoundBox\r\n * @see <a href=\"Tag/AirplaneBoundBox.html\">AirplaneBoundBox</a> for further information.\r\n * @memberof module:solo.tag\r\n */\r\n\r\n/** \r\n * The constructor creates an instance of <a href=\"Tag/Metadata.html\">Metadata</a> object from <a href=\"Tag/index.html\">Cortona3D Tag JavaScript API</a>.\r\n * @class Metadata\r\n * @see <a href=\"Tag/Metadata.html\">Metadata</a> for further information.\r\n * @memberof module:solo.tag\r\n */\r\n\r\n/** \r\n * The constructor creates an instance of <a href=\"Tag/ZSection.html\">ZSection</a> object from <a href=\"Tag/index.html\">Cortona3D Tag JavaScript API</a>.\r\n * @class ZSection\r\n * @see <a href=\"Tag/ZSection.html\">ZSection</a> for further information.\r\n * @memberof module:solo.tag\r\n */\r\n\r\n/** \r\n * The constructor creates an instance of <a href=\"Tag/Vec3f.html\">Vec3f</a> object from <a href=\"Tag/index.html\">Cortona3D Tag JavaScript API</a>.\r\n * @class Vec3f\r\n * @see <a href=\"Tag/Vec3f.html\">Vec3f</a> for further information.\r\n * @memberof module:solo.tag\r\n */\r\n\r\n/** \r\n * The constructor creates an instance of <a href=\"Tag/Rotation.html\">Rotation</a> object from <a href=\"Tag/index.html\">Cortona3D Tag JavaScript API</a>.\r\n * @class Rotation\r\n * @see <a href=\"Tag/Rotation.html\">Rotation</a> for further information.\r\n * @memberof module:solo.tag\r\n */\r\n\r\nmodule.exports = Stella;","/*** IMPORTS FROM imports-loader ***/\n\nvar Stella = {};\n\n/*\n *  stella.framework\n *  Cortona3D Tag API\n *\n *  Created by Alexey Nashchekin on 26.06.2016.\n *  Copyright (C) 2016-2017 ParallelGraphics. All rights reserved.\n *\n */\n\n/* \n * @fileoverview Cortona3D Tag JavaScript API.\n *\n * @author {@link http://www.cortona3d.com Cortona3D}\n * @version 1.2 (50)\n */\n\n\nif (typeof(Stella) === 'undefined')\n\tStella = {};\n\n(function(stella)\n{\n\tvar theModel = new Model3D(),\n\t\tkDotDefaults = {\n\t\t\tareaData: '',\n\t\t\tcolor: [1, 0, 0],\n\t\t\tlocation: new Location(0, 0, 0),\n\t\t\tnormal: [0, 1, 0],\n\t\t\tsectionID: '',\n\t\t\tshapeType: 0,\n\t\t\tstructureClass: '',\n\t\t\ttexture: 0,\n\t\t\ttype: 'dot',\n\t\t\tvp_orientation: [0, 0, 1, 0],\n\t\t\tvp_position: [0, 0, 0]\n\t\t},\n\t\tkDotTypeNames = ['dot', 'line', 'area'],\n\t\tkPredefinedViews = ['LS', 'RS', 'LTF', 'RTF', 'LTA', 'RTA', 'LBF', 'RBF', 'LBA', 'RBA', 'TOP', 'BTM'],\n\t\tkUseXMLDOM = typeof(window.ActiveXObject) === 'undefined' && !(\"ActiveXObject\" in window),\n\t\tnewbornDot = null,\n\t\tlastFlashedDot,\n\t\tlastHoveredItem,\n\t\tzsections = Object.create(null),\n\t\tisPlotMode = false;\n\n\t/**\n\t * Construct a new Location object.\n\t * @classdesc Represents a location of a repair dot in the coordinate space of VRML model.<br>\n\t * @param {number} x - X coordinate.\n\t * @param {number} y - Y coordinate.\n\t * @param {number} z - Z coordinate.\n\t * @class\n\t * @name Location\n\t */\n\tfunction Location(x, y, z)\n\t{\n\t\t/**\n\t\t * X coordinate.\n\t\t * @type number\n\t\t * @name Location#x\n\t\t */\n\t\tthis.x = x;\n\t\t/**\n\t\t * Y coordinate.\n\t\t * @type number\n\t\t * @name Location#y\n\t\t */\n\t\tthis.y = y;\n\t\t/**\n\t\t * Z coordinate.\n\t\t * @type number\n\t\t * @name Location#z\n\t\t */\n\t\tthis.z = z;\n\t}\n\t/**\n\t * Returns an array representation of the location object.\n\t * @returns Array of three floats [x, y, z]\n\t * @type Array\n\t * @function Location#toArray\n\t */\t\n \tLocation.prototype.toArray = function() {return [this.x, this.y, this.z];}\n\t/**\n\t * Returns a string representation of the location object.\n\t * @type String\n\t * @function Location#toString\n\t */\n\tLocation.prototype.toString = function() {return this.x + ' ' + this.y + ' ' + this.z;}\n\n\t/**\n\t * Construct a new Viewpoint object.\n\t * @name Viewpoint\n\t * @classdesc Represents a position of the camera in the 3D.\n\t * @class\n\t */\n\tfunction Viewpoint()\n\t{\n\t\t/**\n\t\t * Camera position as array of three numbers [x, y, z]\n\t\t * @name Viewpoint#position\n\t\t * @type Array\n\t\t */\n\t\tthis.position = [0, 0, 0];\n\t\t/**\n\t\t * Camera orientation as array of four numbers [x, y, z, angle]\n\t\t * @name Viewpoint#orientation\n\t\t * @type Array\n\t\t */\n\t \tthis.orientation = [0, 0, 1, 0];\n\t\t/**\n\t\t * Center of rotation as array of three numbers [x, y, z]\n\t\t * @name Viewpoint#centerpoint\n\t\t * @type Array\n\t\t */\n\t\tthis.centerpoint = [0, 0, 0];\n\t}\n\tObject.defineProperties(Viewpoint.prototype,\n\t{\n\t\t/**\n\t\t * Initializes the object from the string. \n\t\t * @param {String} str - 10 space-delimited numbers corresponding to position, orientation and centerpoint.\n\t\t * @return The {@link Viewpoint} object\n\t\t * @type Viewpoint\n\t\t * @function Viewpoint#fromString\n\t\t */\n\t\t'fromString':\n\t\t{\n\t\t\tvalue: function(str)\n\t\t\t{\n\t\t\t\tvar bulk = str.split(' ');\n\t\t\t\tthis.position = bulk.slice(0, 3);\n\t\t\t\tthis.orientation = bulk.slice(3, 7);\n\t\t\t\tthis.centerpoint = bulk.slice(7);\n\t\t\t\treturn this;\n\t\t\t}\t\t\t\n\t\t},\n\t\t/**\n\t\t * Initializes the object with the current values of position, orientaition and centerpoint being set up in the 3D scene. \n\t\t * @return The {@link Viewpoint} object\n\t\t * @type Viewpoint\n\t\t * @function Viewpoint#fromCurrentViewpoint\n\t\t */\n\t\t'fromCurrentViewpoint':\n\t\t{\n\t\t\tvalue: function(str)\n\t\t\t{\n\t\t\t\tvar\tsp = stackSave(),\n\t\t\t\t\tbulk = stackAlloc(40);\n\t\t\t\tModule._stella_model_getCameraPosition(bulk, 40);\n\t\t\t\tthis.position = float3_asArray(bulk);\n\t\t\t\tthis.orientation = float4_asArray(bulk + 12);\n\t\t\t\tthis.centerpoint = float3_asArray(bulk + 28);\n\t\t\t\tstackRestore(sp);\n\t\t\t\treturn this;\n\t\t\t}\t\t\t\n\t\t},\n\t\t/**\n\t\t * Returns a string representation of an object.\n\t\t * @type String\n\t\t * @function Viewpoint#toString\n\t\t */\n\t\t'toString':\n\t\t{\n\t\t\tvalue: function () {return this.position.join(' ') + ' ' + this.orientation.join(' ') + ' ' + this.centerpoint.join(' ');}\n\t\t}\n\t});\n\n    function float3_asArray(value)\n\t{\n\t\treturn [getValue(value, 'float'), getValue(value + 4, 'float'), getValue(value + 8, 'float')];\n\t}\n\tfunction float4_asArray(value)\n\t{\n\t\treturn [getValue(value, 'float'), getValue(value + 4, 'float'), getValue(value + 8, 'float'), getValue(value + 12, 'float')];\n\t}\n\tfunction float3_asLocation(value)\n\t{\n\t\treturn new Location(getValue(value, 'float'), getValue(value + 4, 'float'), getValue(value + 8, 'float'));\n\t}\n\tfunction float3_fromArray(value, array)\n\t{\n\t\tsetValue(value, array[0], 'float');\n\t\tsetValue(value + 4, array[1], 'float');\n\t\tsetValue(value + 8, array[2], 'float');\n\t}\n\tfunction float4_fromArray(value, array)\n\t{\n\t\tsetValue(value, array[0], 'float');\n\t\tsetValue(value + 4, array[1], 'float');\n\t\tsetValue(value + 8, array[2], 'float');\n\t\tsetValue(value + 12, array[3], 'float');\n\t}\n\tfunction float3_fromLocation(value, location)\n\t{\n\t\tsetValue(value, location.x, 'float');\n\t\tsetValue(value + 4, location.y, 'float');\n\t\tsetValue(value + 8, location.z, 'float');\n\t}\n\tfunction defaultToString()\n\t{\n\t\tvar s = this.constructor.name + ' {',\n\t\t\tkey,\n\t\t\tvalue,\n\t\t\ttype,\n\t\t\tf = false;\n\t\tfor (key in this)\n\t\t{\n\t\t\tvalue = this[key];\n\t\t\ttype = typeof(value);\n\t\t\tif (type === 'function')\n\t\t\t\tcontinue;\n\n\t\t\ts += (f ? ', ' : ' ') + key + '=';\n\t\t\tif (type === 'string')\n\t\t\t\ts += '\"' + value + '\"';\n\t\t\telse if (type === 'object' && (value.constructor === Array || value.constructor === Location || value.constructor === Viewpoint))\n\t\t\t\ts += '[' + value + ']';\n\t\t\telse\n\t\t\t\ts += value;\n\t\t\tf = true;\n\t\t}\n\t\ts += ' }';\n\t\treturn s;\n\t}\n\n\n\t/**\n\t * Construct a new Dot object.\n\t * @classdesc Represents a repair dot.<br>\n\t * @class\n\t * @name Dot\n\t */\n\tfunction Dot()\n\t{\n\t\tvar id = '';\n\t\tObject.defineProperties(this, \n\t\t{\n\t\t\t'_peer': {value: 0, writable: true},\n\t\t\t'_state': {value: Object.create(kDotDefaults), writable: true, configurable: true},\n\n\t\t\t/**\n\t\t\t * The unique ID of the repair dot.\n\t\t\t * @type String\n\t\t\t * @name Dot#id\n\t\t\t */\n\t\t\t'id':\n\t\t\t{\n\t\t\t\tget: function() {return id;},\n\t\t\t\tset: function(value)\n\t\t\t\t{\n\t\t\t\t\tif (!this._peer || theModel._dotWillChangeID(this, value))\n\t\t\t\t\t\tid = value;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tObject.defineProperties(Dot, \n\t{\n\t\t'SHAPE_NONE': {value: 0},\n\t\t'SHAPE_BOX': {value: 1},\n\t\t'SHAPE_SPHERE': {value: 2},\n\t\t'SHAPE_PRISM': {value: 3},\n\t\t'SHAPE_CROSS': {value: 4},\n\t\t'TEXTURE_NONE': {value: 0},\n\t\t'TEXTURE_HATCH': {value: 1},\n\t\t'TEXTURE_CROSSHATCH': {value: 2},\n\t\t'TEXTURE_DOTS': {value: 3},\n\t\t'TEXTURE_CIRCLES': {value: 4}\n\t});\n\n\tObject.defineProperties(Dot.prototype, \n\t{\n\t\t/**\n\t\t * The additional information that will be used for building line or area objects.\n\t\t * @type String\n\t\t * @name Dot#areaData\n\t\t */\n\t\t'areaData':\n\t\t{\n\t\t\tenumerable: true,\n\t\t\tget: function()\n\t\t\t{\n\t\t\t\tvar sz,\n\t\t\t\t\tdata;\n\t\t\t\tif (!this._peer)\n\t\t\t\t\treturn this._state.areaData;\n\t\t\t\tsz = Module._stella_dot_copyAreaData(this._peer);\n\t\t\t\tdata = UTF8ToString(sz);\n\t\t\t\tModule._free(sz);\n\t\t\t\treturn data;\n\t\t\t},\n\t\t\tset: function(value)\n\t\t\t{\n\t\t\t\tif (!this._peer)\n\t\t\t\t\tthis._state.areaData = value;\n\t\t\t\telse\n\t\t\t\t\tModule.ccall('stella_dot_setAreaData', 'null', ['number', 'string'], [this._peer, value]);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * The color of the shape of the repair dot as array of three floats [r, g, b]. \n\t\t * Every RGB component in the array is number in range [0 ... 1]. \n\t\t * @type Array\n\t\t * @name Dot#color\n\t\t * @default [1, 0, 0]\n\t\t */\n\t\t'color':\n\t\t{\n\t\t\tenumerable: true,\n\t\t\tget: function()\n\t\t\t{\n\t\t\t\treturn this._peer ? float3_asArray(Module._stella_dot_getColor(this._peer)) : this._state.color;\n\t\t\t},\n\t\t\tset: function(value)\n\t\t\t{\n\t\t\t\tif (!this._peer)\n\t\t\t\t\tthis._state.color = value;\n\t\t\t\telse\n\t\t\t\t\tModule._stella_dot_setColor(this._peer, value[0], value[1], value[2]);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * VRML coordinates of the repair dot in the 3D.\n\t\t * @type Location\n\t\t * @name Dot#location\n\t\t */\n \t\t'location':\n\t\t{\n\t\t\tenumerable: true,\n\t\t\tget: function()\n\t\t\t{\n\t\t\t\treturn this._peer ? float3_asLocation(Module._stella_dot_getLocation(this._peer)) : this._state.location;\n\t\t\t},\n\t\t\tset: function(value)\n\t\t\t{\n\t\t\t\tif (!this._peer)\n\t\t\t\t\tthis._state.location = value;\n\t\t\t\telse if (value.constructor === Array)\n\t\t\t\t\tModule._stella_dot_setLocation(this._peer, value[0], value[1], value[2]);\n\t\t\t\telse\n\t\t\t\t\tModule._stella_dot_setLocation(this._peer, value.x, value.y, value.z);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * The normal vector as array of three floats [x, y, z] that is used for orientation of the shape of the repair dot in the 3D space. \n\t\t * @type Array\n\t\t * @name Dot#normal\n\t\t * @default [0, 1, 0]\n\t\t */\n\t\t'normal':\n\t\t{\n\t\t\tenumerable: true,\n\t\t\tget: function()\n\t\t\t{\n\t\t\t\treturn this._peer ? float3_asArray(Module._stella_dot_getNormal(this._peer)) : this._state.normal;\n\t\t\t},\n\t\t\tset: function(value)\n\t\t\t{\n\t\t\t\tif (!this._peer)\n\t\t\t\t\tthis._state.normal = value;\n\t\t\t\telse\n\t\t\t\t\tModule._stella_dot_setNormal(this._peer, value[0], value[1], value[2]);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Type of dot geometry in the 3D:\n\t\t * <ul>\n\t\t * <li>0 – No Shape\n\t\t * <li>1 – Box (default)\n\t\t * <li>2 – Sphere\n\t\t * <li>3 – Prism\n\t\t * <li>4 – Cross\n\t\t * </ul>\n\t\t * @type number\n\t\t * @name Dot#shapeType\n\t\t * @default 0\n\t\t */\n\t\t'shapeType':\n\t\t{\n\t\t\tenumerable: true,\n\t\t\tget: function()\n\t\t\t{\n\t\t\t\treturn this._peer ? Module._stella_dot_getShapeType(this._peer) : this._state.shapeType;\n\t\t\t},\n\t\t\tset: function(value)\n\t\t\t{\n\t\t\t\tif (!this._peer)\n\t\t\t\t\tthis._state.shapeType = value;\n\t\t\t\telse\n\t\t\t\t\tModule._stella_dot_setShapeType(this._peer, value|0);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Type of Texture:\n\t\t * <ul>\n\t\t * <li>0 – No Texture\n\t\t * <li>1 – Hatch\n\t\t * <li>2 – Crosshatch\n\t\t * <li>3 – Dots\n\t\t * <li>4 – Circles\n\t\t * </ul>\n\t\t * @type number\n\t\t * @name Dot#texture\n\t\t * @default 0\n\t\t */\n\t\t'texture':\n\t\t{\n\t\t\tenumerable: true,\n\t\t\tget: function()\n\t\t\t{\n\t\t\t\treturn this._peer ? Module._stella_dot_getTextureType(this._peer) : this._state.texture;\n\t\t\t},\n\t\t\tset: function(value)\n\t\t\t{\n\t\t\t\tif (!this._peer)\n\t\t\t\t\tthis._state.texture = value;\n\t\t\t\telse\n\t\t\t\t\tModule._stella_dot_setTextureType(this._peer, value|0);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Type of the repair dot. At the moment, the supported types are \"dot\", \"line\" and \"area\".\n\t\t * @type String\n\t\t * @name Dot#type\n\t\t * @default \"dot\"\n\t\t */\n \t\t'type':\n\t\t{\n\t\t\tenumerable: true,\n\t\t\tget: function()\n\t\t\t{\n\t\t\t\treturn this._peer ? kDotTypeNames[Module._stella_dot_getType(this._peer)] : this._state.type;\n\t\t\t},\n\t\t\tset: function(value)\n\t\t\t{\n\t\t\t\tif (!this._peer)\n\t\t\t\t\tthis._state.type = value;\n\t\t\t\telse\n\t\t\t\t\tModule._stella_dot_setType(this._peer, kDotTypeNames.indexOf(value));\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Section ID where damage occurs.\n\t\t * @type String\n\t\t * @name Dot#sectionID\n\t\t */\n\t\t'sectionID':\n\t\t{\n\t\t\tenumerable: true,\n\t\t\tget: function()\n\t\t\t{\n\t\t\t\treturn this._peer ? UTF8ToString(Module._stella_dot_getSectionID(this._peer)) : this._state.sectionID;\n\t\t\t},\n\t\t\tset: function(value)\n\t\t\t{\n\t\t\t\tif (!this._peer)\n\t\t\t\t\tthis._state.sectionID = value;\n\t\t\t\telse\n\t\t\t\t\tModule.ccall('stella_dot_setSectionID', 'null', ['number', 'string'], [this._peer, value]);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * A name of the airplane structure class where damage occurs.\n\t\t * @type String\n\t\t * @name Dot#structureClass\n\t\t */\n\t\t'structureClass':\n\t\t{\n\t\t\tenumerable: true,\n\t\t\tget: function()\n\t\t\t{\n\t\t\t\treturn this._peer ? UTF8ToString(Module._stella_dot_getStructureClass(this._peer)) : this._state.structureClass;\n\t\t\t},\n\t\t\tset: function(value)\n\t\t\t{\n\t\t\t\tif (!this._peer)\n\t\t\t\t\tthis._state.structureClass = value;\n\t\t\t\telse\n\t\t\t\t\tModule.ccall('stella_dot_setStructureClass', 'null', ['number', 'string'], [this._peer, value]);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * The viewer position as array of three floats [x, y, z]. \n\t\t * @type Array\n\t\t * @name Dot#vp_position\n\t\t * @default [0, 0, 0]\n\t\t */\n\t\t'vp_position':\n\t\t{\n\t\t\tenumerable: true,\n\t\t\tget: function()\n\t\t\t{\n\t\t\t\treturn this._peer ? float3_asArray(Module._stella_dot_getViewpoint(this._peer)) : this._state.vp_position;\n\t\t\t},\n\t\t\tset: function(value)\n\t\t\t{\n\t\t\t\tvar sp, vec;\n\t\t\t\tif (!this._peer)\n\t\t\t\t\tthis._state.vp_position = value;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tsp = stackSave();\n\t\t\t\t\tvec = stackAlloc(12);\n\t\t\t\t\tfloat3_fromArray(vec, value);\n\t\t\t\t\tModule._stella_dot_setViewpoint(this._peer, vec, 0);\n\t\t\t\t\tstackRestore(sp);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * The viewer orientation as array of four floats [x, y, z, angle]. \n\t\t * @type Array\n\t\t * @name Dot#vp_orientation\n\t\t * @default [0, 0, 1, 0]\n\t\t */\n\t\t'vp_orientation':\n\t\t{\n\t\t\tenumerable: true,\n\t\t\tget: function()\n\t\t\t{\n\t\t\t\treturn this._peer ? float4_asArray(12 + Module._stella_dot_getViewpoint(this._peer)) : this._state.vp_orientation;\n\t\t\t},\n\t\t\tset: function(value)\n\t\t\t{\n\t\t\t\tvar sp, rot;\n\t\t\t\tif (!this._peer)\n\t\t\t\t\tthis._state.vp_orientation = value;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tsp = stackSave();\n\t\t\t\t\trot = stackAlloc(16);\n\t\t\t\t\tfloat4_fromArray(rot, value);\n\t\t\t\t\tModule._stella_dot_setViewpoint(this._peer, 0, rot);\n\t\t\t\t\tstackRestore(sp);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'hidden': // added for better API consistency\n\t\t{\n\t\t\tenumerable: true,\n\t\t\tget: function() {return !!(this._peer && Module._stella_item_isHidden(this._peer));},\n\t\t\tset: function(hidden) {if (this._peer) Module._stella_item_setHidden(this._peer, hidden);}\n\t\t},\n\t\t/**\n\t\t * Checks whether the repair dot is visible in 3D scene. \n\t\t * @returns true/false\n\t\t * @type boolean\n\t\t * @function Dot#isShown\n\t\t */\n\t\t'isShown':\n\t\t{\n\t\t\tvalue: function() {return !!(this._peer && !Module._stella_item_isHidden(this._peer));}\n\t\t},\n\t\t/**\n\t\t * Controls visibility of the repair dot in 3D scene.\n\t\t * @function Dot#isShown\n\t\t */\n\t\t'show':\n\t\t{\n\t\t\tvalue: function(show) {if (this._peer) Module._stella_item_setHidden(this._peer, !show);}\n\t\t},\n\t\t/**\n\t\t * Highlights the repair dot.\n\t\t * @param {boolean} highlighted\n\t\t * @function Dot#highlight\n\t\t */\n\t\t'highlight':\n\t\t{\n\t\t\tvalue: function(highlighted) {if (this._peer) Module._stella_item_setHighlighted(this._peer, highlighted);}\n\t\t},\n\t\t/**\n\t\t * Starts flashing the repair dot.\n\t\t * @param {(number|undefined)} duration - The period of time when the flashing of the Dot takes place (in seconds). Default value is 3 seconds.\n\t\t * @param {(number|undefined)} frequency - The frequency of the flashing (in hertz). Default value is 2 hertz.\n\t\t * @function Dot#flash\n\t\t */\n\t\t'flash':\n\t\t{\n\t\t\tvalue: function(duration, frequency)\n\t\t\t{\n\t\t\t\tif (this._peer)\n\t\t\t\t\tModule._stella_dot_flash(this._peer, duration ? (duration|0) : theModel.DOT_FLASH_INTERVAL, frequency ? (frequency|0) : theModel.DOT_FLASH_FREQUENCY);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Cancels flashing the repair dot.\n\t\t * @function Dot#stopFlash\n\t\t */\n\t\t'stopFlash':\n\t\t{\n\t\t\tvalue: function()\n\t\t\t{\n\t\t\t\tif (this._peer)\n\t\t\t\t\tModule._stella_dot_cancelFlash(this._peer);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Clones a new Dot object with the attributes similar to a given object.\n\t\t * @returns Returns the newly created copy of the repair dot object.\n\t\t * @type Dot\n\t\t * @function Dot#cloneDot\n\t\t */\n\t\t'cloneDot':\n\t\t{\n\t\t\tvalue: function()\n\t\t\t{\n\t\t\t\tvar dolly = new Dot();\n\t\t\t\tdolly.id = this.id;\n\t\t\t\tdolly._state = dotGetState(this);\n\t\t\t\treturn dolly;\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Updates the vp_position and vp_orientation properties with the current ones of the camera in the scene.\n\t\t * @function Dot#assignCurrentView\n\t\t */\n\t\t'assignCurrentView':\n\t\t{\n\t\t\tvalue: function()\n\t\t\t{\n\t\t\t\tvar sp = stackSave(),\n\t\t\t\t\tbulk = stackAlloc(28);\n\t\t\t\tModule._stella_model_getCameraPosition(bulk, 28);\n\t\t\t\tif (!this._peer)\n\t\t\t\t{\n\t\t\t\t\tthis._state.vp_position = float3_asArray(bulk);\n\t\t\t\t\tthis._state.vp_orientation = float4_asArray(bulk + 12);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tModule._stella_dot_setViewpoint(this._peer, bulk, bulk + 12);\n\t\t\t\tstackRestore(sp);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Returns a string representation of the repair dot.\n\t\t * @function Dot#toString\n\t\t */\n\t\t'toString':\n\t\t{\n\t\t\tvalue: defaultToString\n\t\t},\n\t\t/**\n\t\t * Updates internal object state.\n\t\t * @function Dot#refresh\n\t\t * @deprecated\n\t\t */\n\t\t'refresh':\n\t\t{\n\t\t\tvalue: function() {}\n\t\t}\n\t});\n\n\tfunction dotDidAttachToModel(dot, model)\n\t{\n\t\tvar state,\n\t\t\tp;\n\t\tModule._stella_item_release(dot._peer);\n\t\tdot._peer = Module._stella_dot_create();\n\t\tModule.ccall('stella_item_setID', 'null', ['number', 'string'], [dot._peer, dot.id]);\n\t\tModule._stella_model_addRepairDot(dot._peer);\n\t\tif (dot._state)\n\t\t{\n\t\t\tstate = dot._state;\n\t\t\tfor (p in state)\n\t\t\t\tdot[p] = state[p];\n\t\t\tdelete dot._state;\n\t\t}\n\t}\n\n\tfunction dotGetState(dot)\n\t{\n\t\treturn {\n\t\t\ttype: dot.type,\n\t\t\tcolor: dot.color,\n\t\t\tlocation: dot.location,\n\t\t\tnormal: dot.normal,\n\t\t\tvp_position: dot.vp_position,\n\t\t\tvp_orientation: dot.vp_orientation,\n\t\t\tshapeType: dot.shapeType,\n\t\t\ttexture: dot.texture,\n\t\t\tsectionID: dot.sectionID,\n\t\t\tstructureClass: dot.structureClass,\n\t\t\tareaData: dot.areaData\n\t\t};\n\t}\n\n\tfunction dotDidDetachFromModel(dot)\n\t{\n\t\tif (!dot._peer)\n\t\t\treturn;\n\n\t\tdot._state = dotGetState(dot);\n\t\tModule._stella_model_removeRepairDot(dot._peer);\n\t\tModule._stella_item_release(dot._peer);\n\t\tdot._peer = 0;\n\t}\n\n\tfunction dotCopyFromPeer(peer)\n\t{\n\t\tvar dot = new Dot();\n\t\tdot.id = UTF8ToString(Module._stella_item_getID(peer));\n\t\tdot._peer = peer;\n\t\tdot._state = dotGetState(dot);\n\t\tdot._peer = 0;\n\t\treturn dot;\n\t}\n\n\t/**\n\t * Construct a new Section object.\n\t * @classdesc Represents a part of VRML model.\n\t * @param {String} sectionID - The unique identifier of VRML section.\n\t * @param {String} name - VRML section name.\n\t * @param {String} url - URL to load VRML file.\n\t * @class\n\t * @name Section\n\t */\n\tfunction Section(sectionID, name, url)\n\t{\n\t\tvar id = sectionID;\n\t\t/**\n\t\t * The name of VRML section.\n\t\t * @type String\n\t\t * @name Section#name\n\t\t */\n\t    this.name = name;\n\t\t/**\n\t\t * The URL to load VRML file.\n\t\t * @type String\n\t\t * @name Section#url\n\t\t */\n\t    this.url = url;\n\t\t/**\n\t\t * The flag that says whether the VRML file is loaded.\n\t\t * @type boolean\n\t\t * @name Section#isLoaded\n\t\t */\n\t\tthis.isLoaded = false;\n\n\t\tObject.defineProperties(this, \n\t\t{\n\t\t\t'_peer': {value: 0, writable: true},\n\t\t\t/**\n\t\t\t * The unique identifier of VRML section.\n\t\t\t * @type String\n\t\t\t * @name Section#id\n\t\t\t */\n\t\t\t'id':\n\t\t\t{\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function() {return id;},\n\t\t\t\tset: function(value) {if (!this._peer) id = value;}\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction getClosestSectionStructures(sectionImpl, location, maxDistance, method, structureClasses)\n\t{\n\t\tif (sectionImpl)\n\t\t{\n\t\t\tvar\tsp = stackSave(),\n\t\t\t\tcount = structureClasses ? structureClasses.length : 0,\n\t\t\t\tcarray = count ? stackAlloc((count + 1) * 4) : 0,\n\t\t\t\ti, res, p, items;\n\t\t\tfor (i = 0; i < count; ++i)\n\t\t\t\tsetValue(carray + i * 4, stackAlloc(intArrayFromString(structureClasses[i])), 'i32');\n\t\t\tsetValue(carray + count * 4, 0, 'i32');\n\t\t\tres = Module[method](sectionImpl, location.x, location.y, location.z, maxDistance, carray);\n\t\t\tstackRestore(sp);\n\t\t\tif (res)\n\t\t\t{\n\t\t\t\titems = [];\n\t\t\t\tcount = getValue(res, 'i32');\n\t\t\t\tp = res + 4;\n\t\t\t\tfor (i = 0; i < count; ++i, p += 20)\n\t\t\t\t{\n\t\t\t\t\titems.push({\n\t\t\t\t\t\t'name': UTF8ToString(getValue(p, '*')),\n\t\t\t\t\t\t'distance': getValue(p + 4, 'float'),\n\t\t\t\t\t\t'translation': new Vec3f(getValue(p + 8, 'float'), getValue(p + 12, 'float'), getValue(p + 16, 'float'))\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tModule._free(res);\n\t\t\t\treturn items;\n\t\t\t}\n\t\t}\n\t}\n\n\tObject.defineProperties(Section.prototype,\n\t{\n\t\t/**\n\t\t * Specifies section visibility.\n\t\t * @type boolean\n\t\t * @name Section#hidden\n\t\t */\n\t\t'hidden':\n\t\t{\n\t\t\tenumerable: true,\n\t\t\tget: function()\n\t\t\t{\n\t\t\t\treturn this._peer && !!Module._stella_section_isHidden(this._peer);\n\t\t\t},\n\t\t\tset: function(value)\n\t\t\t{\n\t\t\t\tif (this._peer)\n\t\t\t\t\tModule._stella_section_setHidden(this._peer, value);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Sections offset in VRML coordinate system.\n\t\t * @type Location\n\t\t * @name Section#translation\n\t\t */\n\t\t'translation':\n\t\t{\n\t\t\tenumerable: true,\n\t\t\tget: function()\n\t\t\t{\n\t\t\t\tif (this._peer)\n\t\t\t\t\treturn float3_asLocation(Module._stella_section_getTranslation(this._peer));\n\t\t\t},\n\t\t\tset: function(value)\n\t\t\t{\n\t\t\t\tif (this._peer)\n\t\t\t\t\tModule._stella_section_setTranslation(this._peer, value.x, value.y, value.z);\n\t\t\t}\n\t\t},\n  \t\t/**\n\t\t * Specifies visibility of repair dots associated with the section.\n\t\t * @type boolean\n\t\t * @name Section#repairDotsHidden\n\t\t */\n\t\t'repairDotsHidden':\n\t\t{\n\t\t\tenumerable: true,\n\t\t\tget: function()\n\t\t\t{\n\t\t\t\treturn this._peer && !!Module._stella_section_areRepairDotsHidden(this._peer);\n\t\t\t},\n\t\t\tset: function(value)\n\t\t\t{\n\t\t\t\tif (this._peer)\n\t\t\t\t\tModule._stella_section_setRepairDotsHidden(this._peer, value);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Loads the section of VRML model by using URL.\n\t\t * @param {String} url - The URL to load VRML file.\n\t\t * @function Section#loadFromUrl\n\t\t */\n\t\t'loadFromUrl':\n\t\t{\n\t\t\tvalue: function(url)\n\t\t\t{\n\t\t\t\tthis.url = url;\n\t\t\t\tif (this._peer)\n\t\t\t\t\tModule.ccall('stella_section_load', 'null', ['number', 'string'], [this._peer, this.url]);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Loads the VRML section to the model. \n\t\t * @function Section#load\n\t\t */\n\t\t'load':\n\t\t{\n\t\t\tvalue: function()\n\t\t\t{\n\t\t\t\tif (this._peer)\n\t\t\t\t\tModule.ccall('stella_section_load', 'null', ['number', 'string'], [this._peer, null]);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Unloads the VRML section from the model. \n\t\t * @function Section#unload\n\t\t */\n\t\t'unload':\n\t\t{\n\t\t\tvalue: function()\n\t\t\t{\n\t\t\t\tvar wasLoaded = this.isLoaded;\n\t\t\t\tif (this._peer)\n\t\t\t\t\tModule._stella_section_unload(this._peer);\n\t\t\t\tthis.isLoaded = false;\n\t\t\t\tif (wasLoaded)\n\t\t\t\t\ttheModel._rebuildStructures(this);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Shows or hides section in 3D view.\n\t\t * @param {boolean} visible <i>true</i> &ndash; to show section; <i>false</i> &ndash; to hide section.\n\t\t * @function Section#switchModel\n\t\t*/\n\t\t'switchModel':\n\t\t{\n\t\t\tvalue: function(visible)\n\t\t\t{\n\t\t\t\tif (this._peer)\n\t\t\t\t\tModule._stella_section_setHidden(this._peer, !visible);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Shows or hides repair dots corresponding to the airplane structure elements of the current class.\n\t\t * @param {boolean} visible <i>true</i> &ndash; to show repair dots; <i>false</i> &ndash; to hide repair dots.\n\t\t * @function Section#switchDots\n\t\t */\n\t\t'switchDots':\n\t\t{\n\t\t\tvalue: function(visible)\n\t\t\t{\n\t\t\t\tif (this._peer)\n\t\t\t\t\tModule._stella_section_setRepairDotsHidden(this._peer, !visible);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Finds all the structure elements of the certain type at a distance not more than radius from the center of a given object location. \n\t\t * @param {Location} location The {@link Location} object.\n\t\t * @param {number} radius The maximum distance to search for a structural element.\n\t\t * @param {Array} structureClasses The array of strings with name of structure classes.\n\t\t * @returns An array of the objects &#123; <i>name</i>: String, <i>distance</i>: number, <i>translation</i>: {@link Vec3f} &#125;. <br>Where, the <i>translation</i> property is a vector from a point given in location to the \"nearest\" point of a structural element with a name that is contained in the <i>name</i> property.\n\t\t * @type Array \n\t\t * @function Section#getStructuresInSphere\n\t\t */\n\t\t'getStructuresInSphere':\n\t\t{\n\t\t\tvalue: function(location, radius, structureClasses)\n\t\t\t{\n\t\t\t\treturn getClosestSectionStructures(this._peer, location, radius, '_stella_section_getStructuresInSphere', structureClasses ? structureClasses : null);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Finds all the structure elements of the certain type at a distance not more than maxDistance from the center of a given object oLocation across the fuselage. \n\t\t * @param {Location} location The {@link Location} object.\n\t\t * @param {number} maxDistance The maximum distance to search for a structural element.\n\t\t * @param {Array} structureClasses The array of strings with name of structure classes.\n\t\t * @returns An array of the objects &#123; <i>name</i>: String, <i>distance</i>: number, <i>translation</i>: {@link Vec3f} &#125;. <br>Where, the <i>translation</i> property is a vector from a point given in location to the \"nearest\" point of a structural element with a name that is contained in the <i>name</i> property.\n\t\t * @type Array \n\t\t * @function Section#getStructuresAcrossFuselage\n\t\t */\n\t\t'getStructuresAcrossFuselage':\n\t\t{\n\t\t\tvalue: function(location, maxDistance, structureClasses)\n\t\t\t{\n\t\t\t\treturn getClosestSectionStructures(this._peer, location, maxDistance, '_stella_section_getStructuresAcrossFuselage', structureClasses ? structureClasses : null);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Returns a string representation of an object.\n\t\t * @type String\n\t\t * @function Section#toString\n\t\t */\n\t\t'toString':\n\t\t{\n\t\t\tvalue: defaultToString\n\t\t}\n\t});\n\n\tfunction sectionDidAttachToModel(section, model)\n\t{\n\t\tModule._stella_section_release(section._peer);\n\t\tsection._peer = Module.ccall('stella_section_create', 'number', ['string', 'string'], [section.id, section.url]);\n\t\tModule._stella_model_addSection(section._peer);\n\n\t\tvar meta = Model3D.instance.metadata;\n\t\tvar ids = section.id.split(':');\n\t\tvar sectionCode = meta.sectionIdToCode(ids.length > 1 ? ids[1] : section.id);\n\t\tsection.translation = meta.coordAirplaneFuselageToVRML(meta.getOffsetForSection(sectionCode));\n\t}\n\n\tfunction sectionDidDetachFromModel(section, model)\n\t{\n\t\tModule._stella_model_removeSection(section._peer);\n\t\tModule._stella_section_release(section._peer);\n\t\tsection._peer = 0;\n\t\ttheModel._rebuildStructures(section);\n\t}\n\n\tfunction getStructureClassFromName(name)\n\t{\n\t\tvar i = name.indexOf('_');\n\t\treturn i < 0 ? name : name.substr(0, i);\n\t}\n\n\t/**\n\t * Constructs a new Structure object. Application should not create instances of Structure objects\n\t * using this constructor. It is published in public namespace only for purposes like type comparison, e.g.\n\t * <br/><code>if (object.constructor === Structure) {console.log('structure object');}</code>\n\t * @class\n\t * @name Structure\n\t */\t\n \tfunction Structure(name, sectionID, peer)\n\t{\n\t\tObject.defineProperties(this,\n\t\t{\n\t\t\t/**\n\t\t\t * Unique identifier of the structure element.\n\t\t\t * @type String\n\t\t\t * @name Structure#id\n\t\t\t * @readonly\n\t\t\t */\n\t\t\t'id': {value: name, enumerable: true},\n\t\t\t/**\n\t\t\t * The name of the structure element. At the moment, it is an alias to the id property.\n\t\t\t * @type String\n\t\t\t * @name Structure#name\n\t\t\t * @readonly\n\t\t\t */\n\t\t\t'name': {value: name, enumerable: true},\n\t\t\t/**\n\t\t\t * The name of structure class.\n\t\t\t * @type String\n\t\t\t * @name Structure#structureClass\n\t\t\t * @readonly\n\t\t\t */\n\t\t\t'structureClass': {value: getStructureClassFromName(name), enumerable: true},\n\t\t\t/**\n\t\t\t * Section identifier of the structure element.\n\t\t\t * @type String\n\t\t\t * @name Structure#sectionID\n\t\t\t * @readonly\n\t\t\t */\n\t\t\t'sectionID': {value: sectionID, enumerable: true},\n\t\t\t'_peer': {value: peer ? peer : 0, writable: true}\n\t\t});\n\t\tif (peer)\n\t\t\tModule._stella_item_retain(peer);\n\t}\n\n\tObject.defineProperties(Structure.prototype,\n\t{\n\t\t/**\n\t\t * Specifies the structure element visibility.\n\t\t * @type boolean\n\t\t * @name Structure#hidden\n\t\t */\n\t\t'hidden':\n\t\t{\n\t\t\tenumerable: true,\n\t\t\tget: function() { return !!(this._peer && Module._stella_item_isHidden(this._peer)); },\n\t\t\tset: function(value) { if (this._peer) Module._stella_item_setHidden(this._peer, value); }\n\t\t},\n\t\t/**\n\t\t * Specifies the transparency level of the structure element.\n\t\t * @type number\n\t\t * @name Structure#transparency\n\t\t */\n\t\t'transparency':\n\t\t{\n\t\t\tenumerable: true,\n\t\t\tget: function() { return this._peer ? Module._stella_element_getTransparency(this._peer) : 0; },\n\t\t\tset: function(value) { if (this._peer) Module._stella_element_setTransparency(this._peer, value); }\n\t\t},\n\t\t/**\n\t\t * Highlights or clear highlight of the structure element.\n\t\t * @param {boolean} highlighted - Specifies whether the structure element should be highlighted.\n\t\t * @function Structure#highlight\n\t\t */\n\t\t'highlight':\n\t\t{\n\t\t\tvalue: function(highlighted) {if (this._peer) Module._stella_item_setHighlighted(this._peer, highlighted, true);}\n\t\t},\n\t\t/**\n\t\t * Sets the new color of the structure element.\n\t\t * @param {Array} color - An array of three numbers [r, g, b]. Every RGB component in the array is a number in range [0...1].\n\t\t * @function Structure#changeColor\n\t\t */\n\t\t'changeColor':\n\t\t{\n\t\t\tvalue: function(color) {if (this._peer) Module._stella_element_setColor(this._peer, color[0], color[1], color[2], true);}\n\t\t},\n\t\t/**\n\t\t * Restores the initial color of the structure element.\n\t\t * @function Structure#restoreColor\n\t\t */\n\t\t'restoreColor':\n\t\t{\n\t\t\tvalue: function() {if (this._peer) Module._stella_element_restoreColor(this._peer, true);}\n\t\t},\n\t\t/**\n\t\t * Returns distance from structure to point.\n\t\t * @param {Location} location The {@link Location} object.\n\t\t * @type Number\n\t\t * @function Structure#getDistanceToPoint\n\t\t */\n\t\t'getDistanceToPoint':\n\t\t{\n\t\t\tvalue: function(location) {return this._peer ? Module._stella_element_getDistanceToPoint(this._peer, location.x, location.y, location.z) : -1;}\n\t\t},\n\t\t/**\n\t\t * Returns string representation of the object.\n\t\t * @type String\n\t\t * @function Structure#toString\n\t\t */\n\t\t'toString':\n\t\t{\n\t\t\tvalue: defaultToString\n\t\t}\n\t});\n\n\t/**\n\t * Constructs an instance of structure class object.\n\t * @classdesc Represents an airplane structure element.\n\t * @param {String} name The name of class for airplane structure element.\n\t * @class\n\t * @name StructureClass\n\t */\n\tfunction StructureClass(name)\n\t{\n\t\t/**\n\t\t * The class name of for airplane structure element, for example, \"FRM\".\n\t\t * @type String\n\t\t * @name StructureClass#name\n\t\t * @readonly\n\t\t */\n\t\tObject.defineProperty(this, 'name', {value: name, enumerable: true});\n\t}\n\n\tObject.defineProperties(StructureClass.prototype,\n\t{\n\t\t// new consistent props\n\t\t/**\n\t\t * Specifies the transparency level of the airplane structure elements which belong to this structure class.\n\t\t * @type number\n\t\t * @name StructureClass#transparency\n\t\t */\n\t\t'transparency':\n\t\t{\n\t\t\tenumerable: true,\n\t\t\tget: function() {return Module.ccall('stella_model_getStructureClassTransparency', 'number', ['string'], [this.name]);},\n\t\t\tset: function(value) {Module.ccall('stella_model_setStructureClassTransparency', 'null', ['string', 'number'], [this.name, value, true]);}\n\t\t},\n\t\t/**\n\t\t * Specifies visibility of the airplane structure elements which belong to this structure class.\n\t\t * @type boolean\n\t\t * @name StructureClass#hidden\n\t\t */\n\t\t'hidden':\n\t\t{\n\t\t\tenumerable: true,\n\t\t\tget: function() {return !!Module.ccall('stella_model_isStructureClassHidden', 'number', ['string'], [this.name]);},\n\t\t\tset: function(value) {Module.ccall('stella_model_setStructureClassHidden', 'null', ['string', 'number', 'number'], [this.name, value, true]);}\n\t\t},\n\t\t/**\n\t\t * Specifies visibility of the repair dots corresponding to airplane structure elements of the structure class.\n\t\t * @type boolean\n\t\t * @name StructureClass#dotsHidden\n\t\t */\n\t\t'dotsHidden':\n\t\t{\n\t\t\tenumerable: true,\n\t\t\tget: function() {return !!Module.ccall('stella_model_areDotsWithStructureClassHidden', 'number', ['string'], [this.name]);},\n\t\t\tset: function(value) {Module.ccall('stella_model_setDotsWithStructureClassHidden', 'null', ['string', 'number', 'number'], [this.name, value, true]);}\n\t\t},\n\n\t\t// legacy\n\t\t/**\n\t\t * Specifies visibility of the repair dots corresponding to airplane structure elements of the structure class.\n\t\t * @type boolean\n\t\t * @name StructureClass#isDotsShown\n\t\t * @readonly\n\t\t */\n\t\t'isDotsShown':\n\t\t{\n\t\t\tenumerable: true,\n\t\t\tget: function() {return !Module.ccall('stella_model_areDotsWithStructureClassHidden', 'number', ['string'], [this.name]);}\n\t\t},\n\t\t/**\n\t\t * Shows or hides repair dots which belong to the airplane structure elements of this class.\n\t\t * @param {boolean} visible - True - show repair dots; False - hide repair dots.\n\t\t * @function StructureClass#switchDots\n\t\t */\n\t\t'switchDots':\n\t\t{\n\t\t\tvalue: function(visible) {Module.ccall('stella_model_setDotsWithStructureClassHidden', 'null', ['string', 'number', 'number'], [this.name, !visible, true])}\n\t\t},\n\t\t/**\n\t\t * Specifies visibility of the airplane structure elements which belong to this structure class.\n\t\t * @type boolean\n\t\t * @name StructureClass#isShown\n\t\t * @readonly\n\t\t */\n\t\t'isShown':\n\t\t{\n\t\t\tenumerable: true,\n\t\t\tget: function() {return !Module.ccall('stella_model_isStructureClassHidden', 'number', ['string'], [this.name]);}\n\t\t},\n\t\t/**\n\t\t * Shows or hides the airplane structure elements of this structure class.\n\t\t * @param {boolean} visible - True - show structure elements; False - hide structure elements.\n\t\t * @function StructureClass#switchModel\n\t\t */\n\t\t'switchModel':\n\t\t{\n\t\t\tvalue: function(visible) {Module.ccall('stella_model_setStructureClassHidden', 'null', ['string', 'number'], [this.name, !visible]);}\n\t\t},\n\t\t/**\n\t\t * Specifies whether the airplane structure elements which belong to this structure class are translucent.\n\t\t * @type boolean\n\t\t * @name StructureClass#isTransparent\n\t\t * @readonly\n\t\t */\n\t\t'isTransparent':\n\t\t{\n\t\t\tenumerable: true,\n\t\t\tget: function() {return Module.ccall('stella_model_getStructureClassTransparency', 'number', ['string'], [this.name]) > 0;}\n\t\t},\n\t\t/**\n\t\t * Controls translucency of airplane structure elements which belong to this class.\n\t\t * @param {boolean} translucent - True - draw structure elements translucent; False - draw structure elements fully opaque.\n\t\t * @function StructureClass#switchTransparent\n\t\t * @see Model3D#DEFAULT_TRANSPARENCY_LEVEL\n\t\t */\n\t\t'switchTransparent':\n\t\t{\n\t\t\tvalue: function(translucent) {Module.ccall('stella_model_setStructureClassTransparency', 'null', ['string', 'number', 'number'], [this.name, translucent ? theModel.DEFAULT_TRANSPARENCY_LEVEL : 0, true]);}\n\t\t},\n\t\t/**\n\t\t * Returns transparency level of the geometry which belong to this structure class.\n\t\t * @returns The float value in the range from 0 to 1, where 0 means opaqueness.\n\t\t * @type number\n\t\t * @function StructureClass#getTransparencyLevel\n\t\t */\t\t\n\t\t'getTransparencyLevel':\n\t\t{\n\t\t\tvalue: function() {return Module.ccall('stella_model_getStructureClassTransparency', 'number', ['string'], [this.name]);}\n\t\t},\n\t\t/**\n\t\t * Returns string representation of the structure class object.\n\t\t * @type String\n\t\t * @function StructureClass#toString\n\t\t */\n\t\t'toString':\n\t\t{\n\t\t\tvalue: defaultToString\n\t\t}\n\t});\n\n\tfunction getObjectList(getter)\n\t{\n\t\tvar list = getter(),\n\t\t\tnames = Object.create(null),\n\t\t\tname,\n\t\t\ti;\n\t\tif (list)\n\t\t{\n\t\t\tfor (i = 0; name = UTF8ToString(getValue(list + i, '*')); i += 4)\n\t\t\t\tnames[name] = name;\n\t\t\tModule._free(list);\n\t\t}\n\t\treturn names;\n\t}\n\n\tfunction getNearestStructures(x, y, z, skipTransparent)\n\t{\n\t\tvar list = Module._stella_model_copyNearestElementList(x, y, z, skipTransparent),\n\t\t\tnames = [],\n\t\t\tname,\n\t\t\ti;\n\t\tif (list)\n\t\t{\n\t\t\tfor (i = 0; name = UTF8ToString(getValue(list + i, '*')); i += 4)\n\t\t\t\tnames.push(name);\n\t\t\tModule._free(list);\n\t\t}\n\t\treturn names;\n\t}\n\n\tfunction defineReadOnlyCollection(impl, items)\n\t{\n\t\tObject.defineProperties(impl,\n\t\t{\n\t\t\t'get':\n\t\t\t{\n\t\t\t\tvalue: function(itemID)\n\t\t\t\t{\n\t\t\t\t\treturn items[itemID] ? items[itemID] : null;\n\t\t\t\t}\n\t\t\t},\n\t\t\t'exists':\n\t\t\t{\n\t\t\t\tvalue: function(itemID)\n\t\t\t\t{\n\t\t\t\t\treturn !!items[itemID];\n\t\t\t\t}\n\t\t\t},\n\t\t\t'contains':\n\t\t\t{\n\t\t\t\tvalue: function(itemID)\n\t\t\t\t{\n\t\t\t\t\treturn !!items[itemID];\n\t\t\t\t}\n\t\t\t},\n\t\t\t'toArray':\n\t\t\t{\n\t\t\t\tvalue: function ()\n\t\t\t\t{\n\t\t\t\t    var result = [],\n\t\t\t\t    \ti;\n\t\t\t\t    for (i in items)\n\t\t\t\t    \tresult.push(items[i]);\n\t\t\t\t    return result;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\tfunction defineCollection(impl, items, model, ctor, itemDidAttachToModel, itemDidDetachFromModel)\n\t{\n\t\tObject.defineProperties(impl,\n\t\t{\n\t\t\t'add':\n\t\t\t{\n\t\t\t\tvalue: function(item)\n\t\t\t\t{\n\t\t\t\t\tif (item instanceof ctor && !items[item.id])\n\t\t\t\t\t{\n\t\t\t\t\t\titems[item.id] = item;\n\t\t\t\t\t\tif (model)\n\t\t\t\t\t\t\titemDidAttachToModel(item, model);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t'remove':\n\t\t\t{\n\t\t\t\tvalue: function(itemID)\n\t\t\t\t{\n\t\t\t\t\tvar item = items[itemID];\n\t\t\t\t\tif (item)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (model)\n\t\t\t\t\t\t\titemDidDetachFromModel(item, model);\n\t\t\t\t\t\tdelete items[itemID];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t'clear':\n\t\t\t{\n\t\t\t\tvalue: function()\n\t\t\t\t{\n\t\t\t\t\tvar i;\n\t\t\t\t\tfor (i in items)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (model)\n\t\t\t\t\t\t\titemDidDetachFromModel(items[i]);\n\t\t\t\t\t\tdelete items[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t'get':\n\t\t\t{\n\t\t\t\tvalue: function(itemID) {return items[itemID] ? items[itemID] : null;}\n\t\t\t},\n\t\t\t'exists':\n\t\t\t{\n\t\t\t\tvalue: function(itemID) {return !!items[itemID];}\n\t\t\t},\n\t\t\t'contains':\n\t\t\t{\n\t\t\t\tvalue: function(itemID) {return !!items[itemID];}\n\t\t\t},\n\t\t\t'toArray':\n\t\t\t{\n\t\t\t\tvalue: function ()\n\t\t\t\t{\n\t\t\t\t    var result = [],\n\t\t\t\t    \ti;\n\t\t\t\t    for (i in items)\n\t\t\t\t    \tresult.push(items[i]);\n\t\t\t\t    return result;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Construct a new Model3D object.\n\t * @name Model3D\n\t * @classdesc This singleton class is used for work with a 3D model of airplane. The instance of Model3D class is placed in the variable model3D.<br>\n\t * @class\n\t */\n\tfunction Model3D()\n\t{\n\t\tif (theModel)\n\t\t\treturn theModel;\n\n\t\tvar dots = Object.create(null),\n\t\t\tsections = Object.create(null),\n\t\t\tstructures = Object.create(null),\n\t\t\tstructureClasses = Object.create(null),\n\t\t\tdotsCollection = new Dots(dots, this),\n\t\t\tsectionsCollection = new Sections(sections, this),\n\t\t\tstructuresCollection = new Structures(structures, this),\n\t\t\tstructureClassesCollection = new StructureClasses(structureClasses, this),\n\t\t\tnullObject = {};\n\n\t\t/**\n\t\t * Default transparency level. The value of 0 means the the model in opaque, 1 - fully transparent.\n\t\t * @name Model3D#DEFAULT_TRANSPARENCY_LEVEL\n\t\t * @type number\n\t\t * @default\n\t\t */\n\t\tthis.DEFAULT_TRANSPARENCY_LEVEL = 0.6;\n\t\t/**\n\t\t * Mouse move sensitivity in pixel.\n\t\t * @name Model3D#MOUSE_MOVE_SENSITIVITY\n\t\t * @type number\n\t\t * @default 3\n\t\t * @deprecated \n\t\t */\n\t\tthis.MOUSE_MOVE_SENSITIVITY = 3;\n\t\t/**\n\t\t * Skip transparent shape when mouse over.\n\t\t * @name Model3D#SKIP_TRANSPARENT_OBJECT\n\t\t * @type boolean\n\t\t * @default true\n\t\t */\n\t\tthis.SKIP_TRANSPARENT_OBJECT = true;\n\t\t/**\n\t\t * Skip transparent shape when mouse up.\n\t\t * @name Model3D#SKIP_TRANSPARENT_OBJECT_ON_CLICK\n\t\t * @type boolean\n\t\t * @default false\n\t\t */\n\t\tthis.SKIP_TRANSPARENT_OBJECT_ON_CLICK = false;\n\t\t/**\n\t\t * Tooltip delay in milliseconds.\n\t\t * @name Model3D#TOOLTIP_DELAY\n\t\t * @type number\n\t\t * @default 500\n\t\t */\n\t\tthis.TOOLTIP_DELAY = 500;\n\t\t/**\n\t\t * Is tooltips enabled.\n\t\t * @name Model3D#ENABLE_TOOLTIPS\n\t\t * @type boolean\n\t\t * @default true\n\t\t */\n\t\tthis.ENABLE_TOOLTIPS = true;\n\t\t/**\n\t\t * Dot flash interval in seconds.\n\t\t * @name Model3D#DOT_FLASH_INTERVAL\n\t\t * @type number\n\t\t * @default 3\n\t\t */\n\t\tthis.DOT_FLASH_INTERVAL = 3;\n\t\t/**\n\t\t * Dot flash frequency in hertz.\n\t\t * @name Model3D#DOT_FLASH_FREQUENCY\n\t\t * @type number\n\t\t * @default 2\n\t\t */\n\t\tthis.DOT_FLASH_FREQUENCY = 2;\n\t\t/**\n\t\t * Is all structure classes visible on load. False - skin structures invisible on load.\n\t\t * @name Model3D#ALL_CLASS_VISIBLE_ON_LOAD\n\t\t * @type boolean\n\t\t * @default false\n\t\t */\n\t\tthis.ALL_CLASS_VISIBLE_ON_LOAD = false;\n\t\t/**\n\t\t * Array of structure classes which belong to the skin.\n\t\t * @name Model3D#SKIN_STRUCTURE_LIST\n\t\t * @type Array \n\t\t * @default [\"RDM\", \"WIN\", \"DR\", \"SKN\", \"FC\", \"FRG\"]\n\t\t */\n\t\tthis.SKIN_STRUCTURE_LIST = [\"RDM\", \"WIN\", \"DR\", \"SKN\", \"FC\", \"FRG\"];\n\t\t/**\n\t\t * The maximum distance in the inches from the point to the \"adjacent\" structure, with which the point is counted to the belonging this structure (see {@link Model3D#getNearestStructuresForDot Model3D.getNearestStructuresForDot()}).\n\t\t * @name Model3D#DOT_TO_STRUCTURE_DISTANCE\n\t\t * @type number\n\t\t * @default 2\n\t\t */\n\t\tthis.DOT_TO_STRUCTURE_DISTANCE = 2;\n\t\t/**\n\t\t * Aircraft Unit = VRML Unit (1 meter) * AC_SCALE_POWER<br>\n\t\t * Default value is 1/0.0254 = 39.37\n\t\t * @type number\n\t\t * @name Model3D#AC_SCALE_POWER\n\t\t * @default 39.37\n\t\t */\n\t\tthis.AC_SCALE_POWER = 1 / 0.0254;\n\n\t\t/**\n\t\t * Contour offset (for lines and areas), in inches. Used only when {@link Model3D#completeAreaDot} method is called;\n\t\t * affects the generated geometry and does not affect the shape of the contour in future.\n\t\t * @name Model3D#areaContourOffset\n\t\t * @type number\n\t\t * @default 1.5\n\t\t */\n\t\tthis.areaContourOffset = 1.5;\n\t\t/**\n\t\t * Area inner surface offset, in inches. Used only when {@link Model3D#completeAreaDot} method is called;\n\t\t * does not affect the shape of the surface in future.\n\t\t * @name Model3D#areaSurfaceOffset\n\t\t * @type number\n\t\t * @default 3\n\t\t */\n\t\tthis.areaSurfaceOffset = 3;\n\t\t/**\n\t\t * This field specifies the contour subdivision for smoothing. The method subdivides the contour\n\t\t * until all edges are not longer than this value (in inches). Used only when {@link Model3D#completeAreaDot}\n\t\t * method is called and does not affect the shape of the surface in future.\n\t\t * @name Model3D#maxAreaEdgeLength\n\t\t * @type number\n\t\t * @default 20\n\t\t */\n\t\tthis.maxAreaEdgeLength = 20;\n\n\t\t/**\n\t\t * The constructor of repair dots collection is not exported to the public namespace. Application is not supposed to\n\t\t * create collection instances, since the collection if fully managed by Stella framework.\n\t\t * @classdesc Represents a named collections of repair dots.\n\t\t * @see Dot\n\t\t * @name Dots\n\t\t * @class\n\t\t */\n\t\tfunction Dots(items, model)\n\t\t{\n\t\t\t/**\n\t\t\t * Returns the object of Dot type with corresponding identifier. If failed, returns null.\n\t\t\t * @param {String} dotID\n\t\t\t * @type Dot\n\t\t\t * @see Dot#id\n\t\t\t * @function Dots#get\n\t\t\t */\n\t\t\t/**\n\t\t\t * Returns the contents of the collection as an array of repair dots.\n\t\t\t * @type Array\n\t\t\t * @function Dots#toArray\n\t\t\t */\n\t\t\t/**\n\t\t\t * Checks whether the collection contains a repair dot with the dotID identifier.\n\t\t\t * @param {String} dotID\n\t\t\t * @returns true/false\n\t\t\t * @type boolean\n\t\t\t * @see Dot#id\n\t\t\t * @function Dots#exists\n\t\t\t */\n\t\t\t/**\n\t\t\t * Adds the repair dot to the collection.\n\t\t\t * @param {Dot} dot The repair dot object.\n\t\t\t * @function Dots#add\n\t\t\t */\n\t\t\t/**\n\t\t\t * Removes the repair dot specified by its identifier from the collection.\n\t\t\t * @param {String} dotID\n\t\t\t * @function Dots#remove\n\t\t\t */\n\t\t\t/**\n\t\t\t * Clears the repair dot collection.\n\t\t\t * @function Dots#clear\n\t\t\t */\n\t\t\tdefineCollection(this, items, model, Dot, dotDidAttachToModel, dotDidDetachFromModel);\n\n\t\t\t/**\n\t\t\t * Removes all repair dots bound to the airplane section with sectionID identifier.\n\t\t\t * @param {String} sectionID\n\t\t\t * @see Section#id\n\t\t\t * @see Dot#sectionID\n\t\t\t * @function Dots#removeForSection\n\t\t\t */\n\t\t\tObject.defineProperty(this, 'removeForSection', \n\t\t\t{\n\t\t\t\tvalue: function(sectionID)\n\t\t\t\t{\n\t\t\t\t\tvar i;\n\t\t\t\t\tfor (i in items)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (items[i].sectionID != sectionID)\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\tif (model)\n\t\t\t\t\t\t\tdotDidDetachFromModel(items[i]);\n\t\t\t\t\t\tdelete items[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t/**\n\t\t * The constructor of sections collection is not exported to the public namespace. Application is not supposed to\n\t\t * create collection instances, since the collection if fully managed by Stella framework.\n\t\t * @classdesc Represents a named collections of sections.\n\t\t * @see Section\n\t\t * @name Sections\n\t\t * @class\n\t\t */\n\t\tfunction Sections(items, model)\n\t\t{\n\t\t\t/**\n\t\t\t * Finds the section object by its identifier.\n\t\t\t * @param {String} sectionID\n\t\t\t * @type Section\n\t\t\t * @see Section#id\n\t\t\t * @function Sections#get\n\t\t\t */\n\t\t\t/**\n\t\t\t * Returns the contents of the collection as an array of section objects.\n\t\t\t * @type Array\n\t\t\t * @function Sections#toArray\n\t\t\t */\n\t\t\t/**\n\t\t\t * Checks whether the collection contains a section object with the sectionID identifier.\n\t\t\t * @param {String} sectionID\n\t\t\t * @returns true/false\n\t\t\t * @type boolean\n\t\t\t * @see Section#id\n\t\t\t * @function Sections#exists\n\t\t\t */\n\t\t\t/**\n\t\t\t * Adds the section object to the collection.\n\t\t\t * @param {Section} section The section object to be added.\n\t\t\t * @function Sections#add\n\t\t\t */\n\t\t\t/**\n\t\t\t * Removes the section object specified by its identifier from the collection.\n\t\t\t * @param {String} SectionID\n\t\t\t * @function Sections#remove\n\t\t\t */\n\t\t\t/**\n\t\t\t * Clears the sections collection.\n\t\t\t * @function Sections#clear\n\t\t\t */\n\t\t\tdefineCollection(this, items, model, Section, sectionDidAttachToModel, sectionDidDetachFromModel);\n\t\t}\n\t\t/**\n\t\t * The constructor of structure parts collection is not exported to the public namespace. Application is not supposed to\n\t\t * create collection instances, since the collection if fully managed by Stella framework.<br>\n\t\t * Note that the collection is <b>read-only</b>.\n\t\t * @classdesc Represents a named collections of structure parts.\n\t\t * @see Structure\n\t\t * @name Structures\n\t\t * @class\n\t\t */\n\t\tfunction Structures(items)\n\t\t{\n\t\t\t/**\n\t\t\t * Finds the structure part object by its identifier.\n\t\t\t * @param {String} structureID\n\t\t\t * @type Structure\n\t\t\t * @see Structure#id\n\t\t\t * @function Structures#get\n\t\t\t */\n\t\t\t/**\n\t\t\t * Returns the contents of the collection as an array of structure objects.\n\t\t\t * @type Array\n\t\t\t * @function Structures#toArray\n\t\t\t */\n\t\t\t/**\n\t\t\t * Checks whether the collection contains a structure part object with the structureID identifier.\n\t\t\t * @param {String} structureID\n\t\t\t * @returns true/false\n\t\t\t * @type boolean\n\t\t\t * @see Structure#id\n\t\t\t * @function Structures#exists\n\t\t\t */\n\t\t\tdefineReadOnlyCollection(this, items);\n\t\t}\n\t\t/**\n\t\t * The constructor of structures classes collection is not exported to the public namespace. Application is not supposed to\n\t\t * create collection instances, since the collection if fully managed by Stella framework.<br>\n\t\t * Note that the collection is <b>read-only</b>.\n\t\t * @classdesc Represents a named collections of sections.\n\t\t * @see StructureClass\n\t\t * @name StructureClasses\n\t\t * @class\n\t\t */\n\t\tfunction StructureClasses(items)\n\t\t{\n\t\t\t/**\n\t\t\t * Finds the structure class object by its name.\n\t\t\t * @param {String} structureClassName\n\t\t\t * @type StructureClass\n\t\t\t * @see StructureClass#name\n\t\t\t * @function StructureClasses#get\n\t\t\t */\n\t\t\t/**\n\t\t\t * Returns the contents of the collection as an array of structure objects.\n\t\t\t * @type Array\n\t\t\t * @function StructureClasses#toArray\n\t\t\t */\n\t\t\t/**\n\t\t\t * Checks whether the collection contains a structure class object with the structureClassName name.\n\t\t\t * @param {String} structureClassName\n\t\t\t * @returns true/false\n\t\t\t * @type boolean\n\t\t\t * @see StructureClass#name\n\t\t\t * @function StructureClasses#exists\n\t\t\t */\n\t\t\tdefineReadOnlyCollection(this, items);\n\t\t}\n\n\t\tObject.defineProperties(this,\n\t\t{\n\t\t\t/**\n\t\t\t * The Metadata object instance.\n\t\t\t * @name Model3D#metadata\n\t\t\t * @type Metadata\n\t\t\t * @readonly\n\t\t\t */\n\t\t\t'metadata':\n\t\t\t{\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: new Metadata()\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * The power value used when calculating the dot size.\n\t\t\t * <br>Dot_size = pow(distance_from_camera, dotScalePower) * dotScaleMult\n\t\t\t * @name Model3D#dotScalePower\n\t\t\t * @type number\n\t\t\t * @default 0.5\n\t\t\t */\n\t\t\t'dotScalePower':\n\t\t\t{\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function() {return Module._stella_model_getDotAppearance(0);},\n\t\t\t\tset: function(value) {return Module._stella_model_setDotAppearance(0, value);}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Multiplier used when calculating the dot size.\n\t\t\t * <br>Dot_size = pow(distance_from_camera, dotScalePower) * dotScaleMult\n\t\t\t * @name Model3D#dotScaleMult\n\t\t\t * @type number\n\t\t\t * @default 4\n\t\t\t */\n\t\t\t'dotScaleMult':\n\t\t\t{\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function() {return Module._stella_model_getDotAppearance(1);},\n\t\t\t\tset: function(value) {return Module._stella_model_setDotAppearance(1, value);}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Power used when calculating the contour (line/area) thickness.\n\t\t\t * <br>Thickness = pow(distance_from_camera, lineScalePower) * lineScaleMult\n\t\t\t * @name Model3D#lineScalePower\n\t\t\t * @type number\n\t\t\t * @default 0.5\n\t\t\t */\n\t\t\t'lineScalePower':\n\t\t\t{\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function() {return Module._stella_model_getDotAppearance(2);},\n\t\t\t\tset: function(value) {return Module._stella_model_setDotAppearance(2, value);}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Multiplier used when calculating the contour thickness (for lines and areas).\n\t\t\t * <br>Thickness = pow(distance_from_camera, lineScalePower) * lineScaleMult\n\t\t\t * @name Model3D#lineScaleMult\n\t\t\t * @type number\n\t\t\t * @default 4\n\t\t\t */\n\t\t\t'lineScaleMult':\n\t\t\t{\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function() {return Module._stella_model_getDotAppearance(3);},\n\t\t\t\tset: function(value) {return Module._stella_model_setDotAppearance(3, value);}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Power used when calculating the texture scale (for areas only).\n\t\t\t * <br>Texture_scale = pow(distance_from_camera, textureScalePower) * textureScaleMult\n\t\t\t * @name Model3D#textureScalePower\n\t\t\t * @type number\n\t\t\t * @default 0.5\n\t\t\t */\n\t\t\t'textureScalePower':\n\t\t\t{\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function() {return Module._stella_model_getDotAppearance(4);},\n\t\t\t\tset: function(value) {return Module._stella_model_setDotAppearance(4, value);}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Multiplier used when calculating the texture scale (for areas only).\n\t\t\t * <br>Texture_scale = pow(distance_from_camera, textureScalePower) * textureScaleMult\n\t\t\t * @name Model3D#textureScaleMult\n\t\t\t * @type number\n\t\t\t * @default 4\n\t\t\t */\n\t\t\t'textureScaleMult':\n\t\t\t{\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function() {return Module._stella_model_getDotAppearance(5);},\n\t\t\t\tset: function(value) {return Module._stella_model_setDotAppearance(5, value);}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Area (type of dot) inner surface transparency level. 0 - opaque, 1 - transparent.\n\t\t\t * @name Model3D#areaSurfaceTransparency\n\t\t\t * @type number\n\t\t\t * @default 0.3\n\t\t\t */\n\t\t\t'areaSurfaceTransparency':\n\t\t\t{\n\t\t\t\tenumerable: true,\n\t\t\t\tget: function() {return Module._stella_model_getDotAppearance(6);},\n\t\t\t\tset: function(value) {return Module._stella_model_setDotAppearance(6, value);}\n\t\t\t},\n\n\t\t\t// Legacy spelling:\n\t\t\t'Dots': {value: dotsCollection, enumerable: true},\n\t\t\t'Sections': {value: sectionsCollection, enumerable: true},\n\t\t\t'StructureClasses': {value: structureClassesCollection, enumerable: true},\n\t\t\t/**\n\t\t\t * @function Model3D#isDotsShown\n\t\t\t */\n\t\t\t'isDotsShown':\n\t\t\t{\n\t\t\t\tget: function() {return !Module._stella_model_areRepairDotsHidden();},\n\t\t\t\tenumerable: true\n\t\t\t},\n\t\t\t/**\n\t\t\t * Shows or hides repair dots for all airplane sections.\n\t\t\t * @param {boolean} visible - Specifies repair dots visibility.\n\t\t\t * @function Model3D#dotsSwitch\n\t\t\t */\n\t\t\t'dotsSwitch':\n\t\t\t{\n\t\t\t\tvalue: function(visible) {return Module._stella_model_setRepairDotsHidden(!visible);}\n\t\t\t},\n\n\t\t\t// Consistent:\n\t\t\t/**\n\t\t\t * @name Model3D#dots\n\t\t\t * @type Dots\n\t\t\t * @readonly\n\t\t\t */\n\t\t\t'dots': {value: dotsCollection, enumerable: true},\n\t\t\t/**\n\t\t\t * @name Model3D#sections\n\t\t\t * @type Sections\n\t\t\t * @readonly\n\t\t\t */\n\t\t\t'sections': {value: sectionsCollection, enumerable: true},\n\t\t\t/**\n\t\t\t * @name Model3D#structures\n\t\t\t * @type Structures\n\t\t\t * @readonly\n\t\t\t */\n\t\t\t'structures': {value: structuresCollection, enumerable: true},\n\t\t\t/**\n\t\t\t * @name Model3D#structureClasses\n\t\t\t * @type StructureClasses\n\t\t\t * @readonly\n\t\t\t */\n\t\t\t'structureClasses': {value: structureClassesCollection, enumerable: true},\n\t\t\t/**\n\t\t\t * Specifies repair dots visibility.\n\t\t\t * @type boolean\n\t\t\t * @name Model3D#dotsHidden\n\t\t\t */\n\t\t\t'dotsHidden':\n\t\t\t{\n\t\t\t\tget: function() {return !!Module._stella_model_areRepairDotsHidden();},\n\t\t\t\tset: function(value) {return Module._stella_model_setRepairDotsHidden(value);},\n\t\t\t\tenumerable: true\n\t\t\t},\n\t\t\t/**\n\t\t\t * Adds the airplane section to the sections collection. Framework will load the VRML representation of the airplane section if needed.\n\t\t\t * @param {Section} section - The section object.\n\t\t\t * @function Model3D#addSection\n\t\t\t * @see Sections#add\n\t\t\t */\n\t\t\t'addSection':\n\t\t\t{\n\t\t\t\tvalue: function(section) {sectionsCollection.add(section);}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Removes the airplane section from the sections collection.\n\t\t\t * @param {String} sectionID - Section identifier\n\t\t\t * @function Model3D#removeSection\n\t\t\t * @see Sections#remove\n\t\t\t */\n\t\t\t'removeSection':\n\t\t\t{\n\t\t\t\tvalue: function(sectionID) {sectionsCollection.remove(sectionID);}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Clears the sections collection.\n\t\t\t * @function Model3D#removeAllSections\n\t\t\t * @see Sections#clear\n\t\t\t */\n\t\t\t'removeAllSections':\n\t\t\t{\n\t\t\t\tvalue: function() {sectionsCollection.clear();}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Returns the contents of the sections collection as an array of section objects.\n\t\t\t * @function Model3D#getSectionsArray\n\t\t\t * @see Sections#toArray\n\t\t\t */\n\t\t\t'getSectionsArray':\n\t\t\t{\n\t\t\t\tvalue: function() {return sectionsCollection.toArray();}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the object of {@link Section} type with corresponding Id which loaded in the 3D. If failed, returns null.\n\t\t\t * @param {String} sectionID - Section identifier\n \t\t\t * @return The section object or undefined if the section with specified was not found in the sections collection.\n \t\t\t * @type Section\n \t\t\t * @function Model3D#getSection\n \t\t\t * @see Sections#get\n \t\t\t */\n\t\t\t'getSection':\n\t\t\t{\n\t\t\t\tvalue: function(sectionID) {return sections[sectionID];}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Adds a new repair dot to the dots collection. Fails, if the dot object with the similar identifier already exists in the collection.\n\t\t\t * @param {Dot} dot The repair dot object to be added.\n\t\t\t * @function Model3D#addRepairDot\n\t\t\t * @see Dots#add\n\t\t\t */\n\t\t\t'addRepairDot':\n\t\t\t{\n\t\t\t\tvalue: function(dot) {dotsCollection.add(dot);}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Removes the repair dot from the dots collection.\n\t\t\t * @param {Dot} dot The repair dot object to be removed.\n\t\t\t * @function Model3D#removeRepairDot\n\t\t\t * @see Dots#remove\n\t\t\t */\n\t\t\t'removeRepairDot':\n\t\t\t{\n\t\t\t\tvalue: function(dot) {dotsCollection.remove(dot.id);}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Returns the contents of the dots collection as an array.\n\t\t\t * @function Model3D#getRepairDotsArray\n\t\t\t * @see Dots#toArray\n\t\t\t */\n\t\t\t'getRepairDotsArray':\n\t\t\t{\n\t\t\t\tvalue: function() {return dotsCollection.toArray();}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Finds the repair dot object by its identifier in the dots collection. If failed, returns null.\n\t\t\t * @param {String} sDotID\n\t\t\t * @returns The {@link Dot} object or null\n\t\t\t * @type Dot\n\t\t\t * @function Model3D#getRepairDot\n\t\t\t * @see Dots#get\n\t\t\t */\n\t\t\t'getRepairDot':\n\t\t\t{\n\t\t\t\tvalue: function(dotID) {return dots[dotID];}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Returns an array of structure classes currently existing in the scene.\n\t\t\t * @returns The Array of {@link StructureClass} objects\n\t\t\t * @type Array\n\t\t\t * @see StructureClasses#toArray\n\t\t\t * @function Model3D#getStructureClassesArray\n\t\t\t */\n\t\t\t'getStructureClassesArray':\n\t\t\t{\n\t\t\t\tvalue: function() {return structureClassesCollection.toArray();}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Returns the repair dot object used by Stella framework for visual creation and editing dots.\n\t\t\t * Should be called only in editing mode.\n\t\t\t * @return The repair dot object.\n\t\t\t * @type Dot\n\t\t\t * @function Model3D#getCursorDot \n\t\t\t */\n\t\t\t'getCursorDot':\n\t\t\t{\n\t\t\t\tvalue: function()\n\t\t\t\t{\n\t\t\t\t\tvar peer = Module._stella_model_getNewbornDot();\n\t\t\t\t\tif (newbornDot)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (newbornDot._peer == peer)\n\t\t\t\t\t\t\treturn newbornDot;\n\n\t\t\t\t\t\tdotDidDetachFromModel(newbornDot);\n\t\t\t\t\t}\n\t\t\t\t\tnewbornDot = new Dot();\n\t\t\t\t\tnewbornDot.id = UTF8ToString(Module._stella_item_getID(peer));\n\t\t\t\t\tnewbornDot._peer = peer;\n\t\t\t\t\tModule._stella_item_retain(peer);\n\t\t\t\t\treturn newbornDot;\n\t\t\t\t}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Starts dot editing mode.\n\t\t\t * @param {String} dotID - The repair dot identifier.\n\t\t\t * @param {String} dotType - The type of the dot being created. The supported values are \"dot\", \"line\" and \"area\".\n\t\t\t * @function Model3D#startPlotMode\n\t\t\t */\n\t\t\t'startPlotMode':\n\t\t\t{\n\t\t\t\tvalue: function(dotID, dotType) {isPlotMode = true; Module.ccall('stella_model_beginPlotMode', 'null', ['string', 'number'], ['' + dotID, dotType ? kDotTypeNames.indexOf(dotType) : 0]);}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Tells the framework to exit dot editing mode.\n\t\t\t * @function Model3D#endPlotMode\n\t\t\t */\n\t\t\t'endPlotMode':\n\t\t\t{\n\t\t\t\tvalue: function() \n\t\t\t\t{\n\t\t\t\t\tisPlotMode = false;\n\t\t\t\t\tModule._stella_model_endPlotMode();\n\t\t\t\t\tif (newbornDot)\n\t\t\t\t\t\tdotDidDetachFromModel(newbornDot);\n\t\t\t\t}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Returns whether the framework is in dot editing mode.\n\t\t\t * @function Model3D#isPlotMode\n\t\t\t */\n\t\t\t'isPlotMode':\n\t\t\t{\n\t\t\t\tget: function() {return isPlotMode;},\n\t\t\t\tenumerable: true\n\t\t\t},\n\t\t\t/**\n\t\t\t * Called when finishing adding a curve-styled repair dot (i.e. dot with the \"line\" or \"area\" type). This function performs\n\t\t\t * the interpolation of the line or area contour, closes the area and calculates the inner surface.\n\t\t\t * @function Model3D#completeAreaDot\n\t\t\t */\n\t\t\t'completeAreaDot':\n\t\t\t{\n\t\t\t\tvalue: function() {Module._stella_model_buildAreaDot();}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Removes the last point from the repair dot contour (for area and line types only).\n\t\t\t * @function Model3D#undoAreaVertex\n\t\t\t */\n\t\t\t'undoAreaVertex':\n\t\t\t{\n\t\t\t\tvalue: function() {Module._stella_model_removeLastAreaPoint();}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Checks if a repair dot can be plotted directly on an airplanes structure. \n\t\t\t * @param {Dot} dot The repair dot object.\n\t\t\t * @returns true/false\n\t\t\t * @type boolean\n\t\t\t * @function Model3D#checkPlot\n\t\t\t */\n\t\t\t'checkPlot':\n\t\t\t{\n\t\t\t\tvalue: function(dot)\n\t\t\t\t{\n\t\t\t\t\tvar pt = dot.location,\n\t\t\t\t\t\tlist = Module._stella_model_copyNearestElementList(pt.x, pt.y, pt.z, false),\n\t\t\t\t\t\thasStructures = false;\n\t\t\t\t\tif (list)\n\t\t\t\t\t{\n\t\t\t\t\t\thasStructures = getValue(list, '*') != 0;\n\t\t\t\t\t\tModule._free(list);\n\t\t\t\t\t}\n\t\t\t\t\treturn hasStructures;\n\t\t\t\t}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Checks if a repair dot can be plotted directly on an airplane’s structure and return array of plotted structures. \n\t\t\t * @param {Dot} dot The repair dot object.\n\t\t\t * @param {(boolean|undefined)} skipTransparent True - skip all transparent structures. Default is false.\n\t\t\t * @returns Array of the structure element identifiers (e.g. \"STR_10L\") that are located close to the repair dot. \n\t\t\t * The array is empty if the dot cannot be put on any structure (i.e. no structure element is close to the dot).\n\t\t\t * @type Array \n\t\t\t * @see Model3D#DOT_TO_STRUCTURE_DISTANCE\n\t\t\t * @function Model3D#getNearestStructuresForDot\n\t\t\t */\n\t\t\t'getNearestStructuresForDot':\n\t\t\t{\n\t\t\t\tvalue: function(dot, skipTransparent) {var pt = dot.location; return getNearestStructures(pt.x, pt.y, pt.z, skipTransparent);}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Returns an array of the predefined views names.\n\t\t\t * @returns The array of Strings\n\t\t\t * @type Array\n\t\t\t * @function Model3D#getPredefinedViewArray\n\t\t\t */\n\t\t\t'getPredefinedViewArray':\n\t\t\t{\n\t\t\t\tvalue: function() {return kPredefinedViews.slice();}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Sets the camera to the location depending on the argument type:\n\t\t\t * <ul>\n\t\t\t * <li>String – Specifies the predefined view in 3D by its name (LS | RS | LTF | RTF | LTA | RTA | LBF | RBF | LBA | RBA | TOP | BTM). The center of rotation is set to the visible part of the scene;</li>\n\t\t\t * <li>{@link Dot} – Sets the camera to the location, which is saved during the process of adding the repair dot. The rotation center is set in the repair dot. In this case the flash method of the Dot object is invoked implicitly. Parameters nDotFlashInterval and nDotFlashFrequency are set to DOT_FLASH_INTERVAL and DOT_FLASH_FREQUENCY parameters of the Model3D object;</li>\n\t\t\t * <li>{@link Viewpoint} – Sets the camera and the center of rotation according to the following attribute values of the Viewpoint object: position, orientation and centerpoint. </li>\n\t\t\t * </ul>\n\t\t\t * @param {(String|Dot|Structure|Viewpoint)} oObject\n\t\t\t * @function Model3D#setView\n\t\t\t */\n\t\t\t'setView':\n\t\t\t{\n\t\t\t\tvalue: function(object)\n\t\t\t\t{\n\t\t\t\t\tvar i,\n\t\t\t\t\t\tsp,\n\t\t\t\t\t\tbulk,\n\t\t\t\t\t\tvp;\n\t\t\t\t\tif (object.constructor === String)\n\t\t\t\t\t{\n\t\t\t\t\t\ti = kPredefinedViews.indexOf(object);\n\t\t\t\t\t\tif (i >= 0)\n\t\t\t\t\t\t\tModule._stella_model_fitSceneWithPredefinedView(i, true);\n\t\t\t\t\t}\n\t\t\t\t\telse if (object.constructor === Dot)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (object._peer)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsp = stackSave();\n\t\t\t\t\t\t\tbulk = stackAlloc(40);\n\t\t\t\t\t\t\tvp = Module._stella_dot_getViewpoint(object._peer);\n\t\t\t\t\t\t\tModule.HEAPU8.set(Module.HEAPU8.subarray(vp, vp + 28), bulk);\n\t\t\t\t\t\t\tModule._stella_item_getCenter(object._peer, bulk + 28);\n\t\t\t\t\t\t\tModule._stella_model_setCameraPosition(bulk, 40, true);\n\t\t\t\t\t\t\tstackRestore(sp);\n\t\t\t\t\t\t\tif (lastFlashedDot)\n\t\t\t\t\t\t\t\tlastFlashedDot.stopFlash();\n\t\t\t\t\t\t\tobject.flash();\n\t\t\t\t\t\t\tlastFlashedDot = object;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (object.constructor === Structure)\n\t\t\t\t\t{\n\t\t\t\t\t\tModule._stella_model_fitItem(object._peer, typeof(animated) === 'undefined' || animated)\n\t\t\t\t\t}\n\t\t\t\t\telse if (object.constructor === Viewpoint)\n\t\t\t\t\t{\n\t\t\t\t\t\tsp = stackSave();\n\t\t\t\t\t\tbulk = stackAlloc(40);\n\t\t\t\t\t\tfloat3_fromArray(bulk, object.position);\n\t\t\t\t\t\tfloat4_fromArray(bulk + 12, object.orientation)\n\t\t\t\t\t\tfloat3_fromArray(bulk + 28, object.centerpoint);\n\t\t\t\t\t\tModule._stella_model_setCameraPosition(bulk, 40, true);\n\t\t\t\t\t\tstackRestore(sp);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Sets the center of rotation of the scene to the specified object of interest. Depending on the object argument type:\n\t\t\t * <ul>\n\t\t\t * <li>{@link Location} or Array – into an arbitrary point of 3D space which is specified by Location or Array object;</li>\n\t\t\t * <li>{@link Structure} – into the bounding box center of the airplane structure element;</li>\n\t\t\t * <li>{@link Dot} – into the location of repair dot;</li>\n\t\t\t * <li>{@link Viewpoint} – according to the.centerpoint attribute value of the Viewpoint object.</li>\n\t\t\t * </ul>\n\t\t\t * The model is centered so that the new center will be placed in the middle of the 3D window. \n\t\t\t * @param {(Location|Dot|Structure|Viewpoint|Array)} object Object of interest.\n\t\t\t * @function Model3D#setCenterpoint\n\t\t\t */\n\t\t\t'setCenterpoint':\n\t\t\t{\n\t\t\t\tvalue: function(object)\n\t\t\t\t{\n\t\t\t\t\tvar sp = stackSave(),\n\t\t\t\t\t\tcenter = stackAlloc(12),\n\t\t\t\t\t\tvalid = false,\n\t\t\t\t\t\tadjustCamera = false;\n\t\t\t\t\tif (object.constructor === Location)\n\t\t\t\t\t{\n\t\t\t\t\t\tfloat3_fromArray(center, object.toArray());\n\t\t\t\t\t\tvalid = true;\n\t\t\t\t\t}\n\t\t\t\t\telse if (object.constructor === Dot || object.constructor === Structure)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (object._peer)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tModule._stella_item_getCenter(object._peer, center);\n\t\t\t\t\t\t\tvalid = true;\n\t\t\t\t\t\t\tadjustCamera = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (object.constructor === Viewpoint)\n\t\t\t\t\t{\n\t\t\t\t\t\tfloat3_fromArray(center, object.centerpoint);\n\t\t\t\t\t\tvalid = true;\n\t\t\t\t\t}\n\t\t\t\t\telse if (object.constructor === Array)\n\t\t\t\t\t{\n\t\t\t\t\t\tfloat3_fromArray(center, object);\n\t\t\t\t\t\tvalid = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tModule._stella_model_setRotationCenter(valid ? center : 0, adjustCamera);\n\t\t\t\t\tstackRestore(sp);\n\t\t\t\t}\n\t\t\t},\n \t\t\t/**\n\t\t\t * Sets the center of rotation of 3D scene to a visible place on the computer screen.\n\t\t\t * Zoom level is not changed.\n\t\t\t * @function Model3D#resetCenterpoint\n\t\t\t */\n\t\t\t'resetCenterpoint':\n\t\t\t{\n\t\t\t\tvalue: function(object) {Module._stella_model_setRotationCenter(0, false);}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Rotates the model to an upright position as if the airplane were on the ground.\n\t\t\t * @param {(boolean|undefined)} animated - Specifies if the camera transition should be animated or instant. Default is true.\n\t\t\t * @function Model3D#alignModel\n\t\t\t */\n\t\t\t'alignModel':\n\t\t\t{\n\t\t\t\tvalue: function(animated) {Module._stella_model_alignCamera(typeof(animated) === 'undefined' || animated);}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Fits model in view.\n\t\t\t * @param {(boolean|undefined)} animated - Specifies if the camera transition should be animated or instant. Default is true.\n\t\t\t * @function Model3D#fitToModel\n\t\t\t */\n\t\t\t'fitToModel':\n\t\t\t{\n\t\t\t\tvalue: function(animated) {Module._stella_model_fitScene(typeof(animated) === 'undefined' || animated);}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Fits structure part in view. The center of rotation is set to the center of bounding box of the structure part.\n\t\t\t * @param {Structure} structure - Structure to be fit.\n\t\t\t * @param {(boolean|undefined)} animated - Specifies if the camera transition should be animated or instant. Default is true.\n\t\t\t * @function Model3D#fitToStructure\n\t\t\t */\n\t\t\t'fitToStructure':\n\t\t\t{\n\t\t\t\tvalue: function(structure, animated) {Module._stella_model_fitItem(structure._peer, typeof(animated) === 'undefined' || animated);}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Turns on or off the directional axes (i.e. an airplane model in the upper right corner of the 3D view).\n\t\t\t * @param {boolean} visible - Specifies the visibility of the directional axes.\n\t\t\t * @function Model3D#switchOSDAxis\n\t\t\t */\n\t\t\t'switchOSDAxis':\n\t\t\t{\n\t\t\t\tvalue: function(visible) {Module._stella_model_setOSAxisHidden(!visible);}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Enables or disables visualization of the center of rotation in 3D scene.\n\t\t\t * @param {boolean} visible - Specifies the visibility of the center of rotation.\n\t\t\t * @function Model3D#switchOSDCenterpoint\n\t\t\t */\n\t\t\t'switchOSDCenterpoint':\n\t\t\t{\n\t\t\t\tvalue: function(visible) {Module._tiramisu_setRotationCenterVisibility(visible);}\t\n\t\t\t},\n\t\t\t/**\n\t\t\t * Resets the model state.\n\t\t\t * @function Model3D#reset\n\t\t\t */\n\t\t\t'reset':\n\t\t\t{\n\t\t\t\tvalue: function()\n\t\t\t\t{\n\t\t\t\t\tif (this.tooltipOver3D)\n\t\t\t\t\t\tthis.tooltipOver3D.hide();\n\t\t\t\t\tlastHoveredItem = null;\n\t\t\t\t\tif (this.on_model_reset)\n\t\t\t\t\t\tthis.on_model_reset();\n\t\t\t\t}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Initialization of object. If initialization is succeeded, the on_initialize() event is fired. \n\t\t\t * @param {HTMLElement} tooltipElement The HTML object, which is used as a tooltip container.\n\t\t\t * @function Model3D#initialize\n\t\t\t */\n\t\t\t'initialize':\n\t\t\t{\n\t\t\t\tvalue: function(tooltipElement)\n\t\t\t\t{\n\t\t\t\t\tvar tooltip = new Tooltip(tooltipElement);\n\t\t\t\t\ttooltip.delay = this.TOOLTIP_DELAY;\n\t\t\t\t\tObject.defineProperty(this, 'tooltipOver3D', {value: tooltip, enumerable: true});\n\t\t\t\t\tif (this.on_initialize)\n\t\t\t\t\t\tthis.on_initialize();\n\t\t\t\t}\n\t\t\t},\n\t\t\t'_sectionDidFinishLoad':\n\t\t\t{\n\t\t\t\tvalue: function(peer, elements)\n\t\t\t\t{\n\t\t\t\t\tvar i,\n\t\t\t\t\t\tsection = null,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tstructure,\n\t\t\t\t\t\tstructureClass,\n\t\t\t\t\t\thidden;\n\n\t\t\t\t\tfor (i in sections)\n\t\t\t\t\t{\n\t\t\t\t\t\tsection = sections[i];\n\t\t\t\t\t\tif (section._peer === peer)\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (!section)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tfor (i = 0; name = UTF8ToString(getValue(elements + i, '*')); i += 8)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (structures[name])\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\tstructure = new Structure(name, section.id, getValue(elements + i + 4, '*'));\n\t\t\t\t\t\tstructures[name] = structure;\n\n\t\t\t\t\t\tname = structure.structureClass;\n\t\t\t\t\t\tif (!structureClasses[name])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstructureClass = new StructureClass(name);\n\t\t\t\t\t\t\tstructureClasses[name] = structureClass;\n\t\t\t\t\t\t\thidden = theModel.SKIN_STRUCTURE_LIST.indexOf(name) >= 0 && !theModel.ALL_CLASS_VISIBLE_ON_LOAD;\n\t\t\t\t\t\t\tstructureClass.hidden = hidden;\n\t\t\t\t\t\t\tstructureClass.dotsHidden = hidden;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tsection.isLoaded = true;\n\t\t\t\t\tif (this.on_section_loaded)\n\t\t\t\t\t\tthis.on_section_loaded(section);\n\t\t\t\t}\n\t\t\t},\n\t\t\t'_rebuildStructures':\n\t\t\t{\n\t\t\t\tvalue: function(sectionBeingUnloaded)\n\t\t\t\t{\n\t\t\t\t\tvar items = getObjectList(Module._stella_model_copyStructureList),\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tstructure;\n\t\t\t\t\tfor (i in structures)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (!items[i])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstructure = structures[i];\n\t\t\t\t\t\t\tModule._stella_item_release(structure._peer);\n\t\t\t\t\t\t\tstructure._peer = 0;\n\t\t\t\t\t\t\tdelete structures[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\titems = getObjectList(Module._stella_model_copyStructureClassList);\n\t\t\t\t\tfor (i in structureClasses)\n\t\t\t\t\t\tif (!items[i])\n\t\t\t\t\t\t\tdelete structureClasses[i];\n\n\t\t\t\t\tif (sectionBeingUnloaded && this.on_section_unloaded)\n\t\t\t\t\t\tthis.on_section_unloaded(sectionBeingUnloaded);\n\t\t\t\t}\n\t\t\t},\n\t\t\t'_dotWillChangeID':\n\t\t\t{\n\t\t\t\tvalue: function(dot, newID)\n\t\t\t\t{\n\t\t\t\t\tvar existingDot = dots[newID];\n\t\t\t\t\tif (existingDot && existingDot !== dot)\n\t\t\t\t\t\treturn false;\n\t\t\t\t\tif (dots[dot.id])\n\t\t\t\t\t\tdelete dots[dot.id];\n\t\t\t\t\tdots[newID] = dot;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t},\n\t\t\t'_didClick':\n\t\t\t{\n\t\t\t\tvalue: function(x, y, modifierKeys, location, itemID, itemType)\n\t\t\t\t{\n\t\t\t\t\tvar item;\n\t\t\t\t\tlocation = float3_asLocation(location);\n\t\t\t\t\titemID = UTF8ToString(itemID);\n\t\t\t\t\tif (itemType === 0)\n\t\t\t\t\t\titem = structures[itemID];\n\t\t\t\t\telse if (itemType === 1)\n\t\t\t\t\t\titem = dots[itemID];\n\t\t\t\t\tif (item && this.on_click_object)\n\t\t\t\t\t\tthis.on_click_object(location, item, 1, modifierKeys);\n\t\t\t\t}\n\t\t\t},\n\t\t\t'_didHover':\n\t\t\t{\n\t\t\t\tvalue: function(x, y, location, itemID, itemType)\n\t\t\t\t{\n\t\t\t\t\tvar item;\n\t\t\t\t\tlocation = float3_asLocation(location);\n\t\t\t\t\titemID = UTF8ToString(itemID);\n\t\t\t\t\tif (itemType === 0)\n\t\t\t\t\t\titem = structures[itemID];\n\t\t\t\t\telse if (itemType === 1)\n\t\t\t\t\t\titem = dots[itemID];\n\t\t\t\t\tif (lastHoveredItem != item)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.tooltipOver3D.hide();\n\t\t\t\t\t\tlastHoveredItem = item;\n\t\t\t\t\t\tif (typeof(this.on_over_object) === 'function')\n\t\t\t\t\t\t\tthis.on_over_object(location, item ? item : nullObject);\n\t\t\t\t\t}\n\t\t\t\t\tif (item && this.ENABLE_TOOLTIPS)\n\t\t\t\t\t\tthis.tooltipOver3D.show(x, y);\n\t\t\t\t\tif (this.on_over)\n\t\t\t\t\t\tthis.on_over(location, item ? item : nullObject);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Shows or hides airplane structure components of the structure class with specified name.\n\t\t\t * @param {String} className - Name of the structure class.\n\t\t\t * @param {boolean} visibility - Specifies visibility of the structure components.\n\t\t\t * @function Model3D#structureClassSwitch\n\t\t\t */\n\t\t\t'structureClassSwitch':\n\t\t\t{\n\t\t\t\tvalue: function(className, visibility)\n\t\t\t\t{\n\t\t\t\t\tvar structureClass = structureClasses[className];\n\t\t\t\t\tif (structureClass)\n\t\t\t\t\t\tstructureClass.hidden = !visibility;\n\t\t\t\t}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Turns on or off structure parts translucency of the structure class with specified name.\n\t\t\t * @param {String} className Name of the class structure.\n\t\t\t * @param {boolean} translucent Specifies translucency of the structure parts.\n\t\t\t * @function Model3D#structureClassTransparent\n\t\t\t */\n\t\t\t'structureClassTransparent':\n\t\t\t{\n\t\t\t\tvalue: function(className, translucent)\n\t\t\t\t{\n\t\t\t\t\tvar structureClass = structureClasses[className];\n\t\t\t\t\tif (structureClass)\n\t\t\t\t\t\tstructureClass.transparency = translucent ? theModel.DEFAULT_TRANSPARENCY_LEVEL : 0;\n\t\t\t\t}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Shows or hides airplane repair dots in the loaded sections for all structure components with specified class name.\n\t\t\t * @param {String} className - Name of the structure class.\n\t\t\t * @param {boolean} visibility - Specifies visibility of the repair dots.\n\t\t\t * @function Model3D#structureClassDotsSwitch\n\t\t\t */\n\t\t\t'structureClassDotsSwitch':\n\t\t\t{\n\t\t\t\tvalue: function(className, visibility)\n\t\t\t\t{\n\t\t\t\t\tvar structureClass = structureClasses[className];\n\t\t\t\t\tif (structureClass)\n\t\t\t\t\t\tstructureClass.dotsHidden = !visibility;\n\t\t\t\t}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Checks if an airplane structures component of sClassName class is shown.\n\t\t\t * @param {String} className Name of the class structure\n\t\t\t * @returns true/false\n\t\t\t * @type boolean\n\t\t\t * @function Model3D#structureClassGetModel\n\t\t\t */\n\t\t\t'structureClassGetModel':\n\t\t\t{\n\t\t\t\tvalue: function(className)\n\t\t\t\t{\n\t\t\t\t\tvar structureClass = structureClasses[className];\n\t\t\t\t\treturn structureClass && !structureClass.hidden;\n\t\t\t\t}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Returns the level of transparency for the class of structure.\n\t\t\t * @param {String} className Name of the class structure\n\t\t\t * @return The number value in the range from 0 to 1, where 0 means opacity.\n\t\t\t * @type number\n\t\t\t * @see Model3D#DEFAULT_TRANSPARENCY_LEVEL\n\t\t\t * @function Model3D#structureClassGetTransparency\n\t\t\t */\n\t\t\t'structureClassGetTransparency':\n\t\t\t{\n\t\t\t\tvalue: function(className)\n\t\t\t\t{\n\t\t\t\t\tvar structureClass = structureClasses[className];\n\t\t\t\t\treturn structureClass ? structureClass.transparency : 0;\n\t\t\t\t}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Turns on or off semitransparent material for all loaded airplane model.\n\t\t\t * @param {boolean} translucent\n\t\t\t * @see Model3D#DEFAULT_TRANSPARENCY_LEVEL\n\t\t\t * @function Model3D#modelTransparent\n\t\t\t */\n\t\t\t'modelTransparent':\n\t\t\t{\n\t\t\t\tvalue: function(translucent)\n\t\t\t\t{\n\t\t\t\t\tvar transparency = translucent ? theModel.DEFAULT_TRANSPARENCY_LEVEL : 0,\n\t\t\t\t\t\ti;\n\t\t\t\t\tfor (i in structureClasses)\n\t\t\t\t\t\tstructureClasses[i].transparency = transparency;\n\t\t\t\t}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Finds all the structure elements of the certain type at a distance not more than radius from the center of a given object location. \n\t\t\t * @param {String} sectionID Airplane section ID.\n\t\t\t * @param {Location} location The {@link Location} object.\n\t\t\t * @param {number} radius The maximum distance to search for a structural element.\n\t\t\t * @param {Array} structureClasses The array of strings with name of structure classes.\n\t\t\t * @returns An array of the objects &#123; <i>name</i>: String, <i>distance</i>: number, <i>translation</i>: {@link Vec3f} &#125;. <br>Where, the <i>translation</i> property is a vector from a point given in location to the \"nearest\" point of a structural element with a name that is contained in the <i>name</i> property.\n\t\t\t * @type Array \n\t\t\t * @see Section#getStructuresInSphere\n\t\t\t * @function Model3D#getStructuresInSphere\n\t\t\t */\n\t\t\t'getStructuresInSphere':\n\t\t\t{\n\t\t\t\tvalue: function(sectionID, location, radius, structureClasses)\n\t\t\t\t{\n\t\t\t\t\tif (sections[sectionID])\n\t\t\t\t\t\treturn sections[sectionID].getStructuresInSphere(location, radius, structureClasses);\n\t\t\t\t}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Finds all the structure elements of the certain type at a distance not more than maxDistance from the center of a given object location across the fuselage. \n\t\t\t * @param {String} sectionID Airplane section ID.\n\t\t\t * @param {Location} location The {@link Location} object.\n\t\t\t * @param {number} maxDistance The maximum distance to search for a structural element.\n\t\t\t * @param {Array} structureClasses The array of strings with name of structure classes.\n\t\t\t * @returns An array of the objects &#123; <i>name</i>: String, <i>distance</i>: number, <i>translation</i>: {@link Vec3f} &#125;. <br>Where, the <i>translation</i> property is a vector from a point given in location to the \"nearest\" point of a structural element with a name that is contained in the <i>name</i> property.\n\t\t\t * @type Array \n\t\t\t * @see Section#getStructuresAcrossFuselage\n\t\t\t * @function Model3D#getStructuresAcrossFuselage\n\t\t\t */\n\t\t\t'getStructuresAcrossFuselage':\n\t\t\t{\n\t\t\t\tvalue: function(sectionID, location, radius, structureClasses)\n\t\t\t\t{\n\t\t\t\t\tif (sections[sectionID])\n\t\t\t\t\t\treturn sections[sectionID].getStructuresAcrossFuselage(location, maxDistance, structureClasses);\n\t\t\t\t}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Finds distance to the structure element. \n\t\t\t * @param {String} sectionID Airplane section ID.\n\t\t\t * @param {String} structureName Name of structure element.\n\t\t\t * @param {Location} location The {@link Location} object.\n\t\t\t * @param {number} maxDistance The maximum distance to search for a structural element.\n\t\t\t * @returns Distance to structure in meters.\n\t\t\t * @type number \n\t\t\t * @see Section#getDistanceToPoint\n\t\t\t * @function Model3D#getDistanceToStructure\n\t\t\t */\n\t\t\t'getDistanceToStructure':\n\t\t\t{\n\t\t\t\tvalue: function(sectionID, structureName, location, maxDistance)\n\t\t\t\t{\n\t\t\t\t\tvar s = structures[structureName],\n\t\t\t\t\t\td;\n\t\t\t\t\tif (s && s.sectionID == sectionID)\n\t\t\t\t\t{\n\t\t\t\t\t\td = s.getDistanceToPoint(location);\n\t\t\t\t\t\treturn typeof(maxDistance) === 'undefined' ? d : Math.min(d, maxDistance);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t},\n\t\t\t/**\n\t\t\t * The global rotation of the VRML model.\n\t\t\t * Default value is Rotation(-0.57735, 0.57735, 0.577352, 2.0944), which is equivalent to a serial rotations by -90 degrees along the axis X and by 90 degrees along the axis Y.\n\t\t\t * <p><i><b>NOTE:</b> API requires that the VRML model should be oriented as follows: upwards along the axis Y, forward on the axis Z.</i>\n\t\t\t * @type Rotation\n\t\t\t * @name Model3D#MODEL_ROTATION\n\t\t\t */\n\t\t\t'MODEL_ROTATION':\n\t\t\t{\n\t\t\t\tget: function()\n\t\t\t\t{\n\t\t\t\t\tvar sp = stackSave(),\n\t\t\t\t\t\trotation = stackAlloc(16),\n\t\t\t\t\t\tvalue;\n\t\t\t\t\tModule._stella_model_getModelRotation(rotation);\n\t\t\t\t\tvalue = new Rotation(getValue(rotation, 'float'), getValue(rotation + 4, 'float'), getValue(rotation + 8, 'float'), getValue(rotation + 12, 'float'));\n\t\t\t\t\tstackRestore(sp);\n\t\t\t\t\treturn value;\n\t\t\t\t},\n\t\t\t\tset: function(value)\n\t\t\t\t{\n\t\t\t\t\tvar sp = stackSave(),\n\t\t\t\t\t\trotation = stackAlloc(16);\n\t\t\t\t\tfloat4_fromArray(rotation, value ? value.toArray() : [0, 0, 1, 0]);\n\t\t\t\t\tModule._stella_model_setModelRotation(rotation);\n\t\t\t\t\tstackRestore(sp);\n\t\t\t\t},\n\t\t\t\tenumerable: true\t\t\t\t\n            }\n\t\t});\n\t}\n\n\t/**\n\t * The singleton instance of Model3D\n\t * @name Model3D.instance\n\t * @type Model3D\n\t */\n\tObject.defineProperty(Model3D, 'instance', {value: theModel});\n\n\tif (kUseXMLDOM)\n\t{\n\t\tObject.defineProperties(Element.prototype,\n\t\t{\n\t\t\t'selectSingleNode':\n\t\t\t{\n\t\t\t\tvalue: function(xpath)\n\t\t\t\t{\n\t\t\t\t\treturn this.ownerDocument.evaluate(xpath, this, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;\n\t\t\t\t}\n\t\t\t},\n\t\t\t'selectNodes':\n\t\t\t{\n\t\t\t\tvalue: function(xpath)\n\t\t\t\t{\n\t\t\t\t\tvar i = this.ownerDocument.evaluate(xpath, this, null, XPathResult.ORDERED_NODE_ITERATOR_TYPE, null),\n\t\t\t\t\t\tnodes = [],\n\t\t\t\t\t\tn;\n\t\t\t\t\twhile (n = i.iterateNext())\n\t\t\t\t\t\tnodes.push(n);\n\t\t\t\t\treturn nodes;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tObject.defineProperties(XMLDocument.prototype,\n\t\t{\n\t\t\t'selectSingleNode':\n\t\t\t{\n\t\t\t\tvalue: function(xpath)\n\t\t\t\t{\n\t\t\t\t\treturn this.evaluate(xpath, this, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;\n\t\t\t\t}\n\t\t\t},\n\t\t\t'selectNodes':\n\t\t\t{\n\t\t\t\tvalue: function(xpath)\n\t\t\t\t{\n\t\t\t\t\tvar i = this.evaluate(xpath, this, null, XPathResult.ORDERED_NODE_ITERATOR_TYPE, null),\n\t\t\t\t\t\tnodes = [],\n\t\t\t\t\t\tn;\n\t\t\t\t\twhile (n = i.iterateNext())\n\t\t\t\t\t\tnodes.push(n);\n\t\t\t\t\treturn nodes;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\n\t/**\n\t * Construct a new AirplaneBoundBox object.\n\t * @classdesc Represents a boundbox of a airplane section in the Fuselage coordinates.<br>\n\t * @class\n\t * @name AirplaneBoundBox\n\t */\n\tfunction AirplaneBoundBox()\n\t{\n\t\t/**\n\t\t * Center of bounding box.\n\t\t * @type AirplaneFuselageLocation\n\t\t * @name AirplaneBoundBox#center\n\t\t */\n\t\tthis.center = new AirplaneFuselageLocation(0, 0, 0);\n\n\t\t/**\n\t\t * Size of bounding box.\n\t\t * @type AirplaneFuselageLocation\n\t\t * @name AirplaneBoundBox#size\n\t\t */\n\t\tthis.size = new AirplaneFuselageLocation(0, 0, 0);\n\t}\n\n\t/**\n\t * Construct a new AirplaneBoundBox object from xml node.\n\t * @param {XMLDOMNode} xmlnode XML node represents airplane section boundbox \n\t * @returns The AirplaneBoundBox object\n\t * @type AirplaneBoundBox\n\t * @function AirplaneBoundBox#fromXMLNode\n\t */\n\tAirplaneBoundBox.prototype.fromXMLNode = function(xmlnode)\n\t{\n\t\tthis.center.fromXMLNode(xmlnode.selectSingleNode('center'));\n\t\tthis.center.BBL = -this.center.BBL; /* metadata uses reverse BBL coordinate */\n\t\tthis.size.fromXMLNode(xmlnode.selectSingleNode('size'));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Check if the location is inside of the bounding box.\n\t * @param {AirplaneFuselageLocation} airplaneFuselageLocation Fuselage location \n\t * @returns true/false\n\t * @type boolean\n\t * @function AirplaneBoundBox#isInside\n\t */\n\tAirplaneBoundBox.prototype.isInside = function(airplaneFuselageLocation)\n\t{\n\t\treturn Math.abs(airplaneFuselageLocation.BSTA - this.center.BSTA) <= this.size.BSTA / 2 &&\n\t\t\tMath.abs(airplaneFuselageLocation.BBL - this.center.BBL) <= this.size.BBL / 2 &&\n\t\t\tMath.abs(airplaneFuselageLocation.BWL - this.center.BWL) <= this.size.BWL / 2;\n\t}\n\n\t/**\n\t * Check if the bounding box is empty.\n\t * @returns true/false\n\t * @type boolean\n\t * @function AirplaneBoundBox#isEmpty\n\t */\n\tAirplaneBoundBox.prototype.isEmpty = function()\n\t{\n\t\treturn this.size.BSTA == 0 && this.size.BBL == 0 && this.size.BWL == 0;\n\t}\n\n\t/**\n\t * Returns a string representation of an object.\n\t * @returns A string of the following form: \"CENTER( BSTA=..., BBL=..., BWL=... ) SIZE( BSTA=..., BBL=..., BWL=... )\"\n\t * @type String\n\t * @function AirplaneBoundBox#toString\n\t */\n\tAirplaneBoundBox.prototype.toString = function()\n\t{\n\t\treturn \"CENTER(\" + this.center + \") SIZE(\" + this.size + \")\";\n\t}\n\n\t/**\n\t * Construct a new AirplaneFuselageLocation object.\n\t * @classdesc Represents a location in the Fuselage coordinates.<br>\n\t * @param {number} bsta Body Station coordinate \n\t * @param {number} bwl Body Water Line coordinate \n\t * @param {number} bbl Body Buttock Line coordinate \n\t * @class\n\t * @name AirplaneFuselageLocation\n\t */\n\tfunction AirplaneFuselageLocation(bsta, bwl, bbl)\n\t{\n\t\t/**\n\t\t * Body Station coordinate.\n\t\t * @type number\n\t\t * @name AirplaneFuselageLocation#BSTA\n\t\t */\n\t\tthis.BSTA = bsta;\n\t\t/**\n\t\t * Body Water Line coordinate.\n\t\t * @type number\n\t\t * @name AirplaneFuselageLocation#BWL\n\t\t */\n\t\tthis.BWL = bwl;\n\t\t/**\n\t\t * Body Buttock Line coordinate. Negative value is left side. Positive value is right side.\n\t\t * @type number\n\t\t * @name AirplaneFuselageLocation#BBL\n\t\t */\n\t\tthis.BBL = bbl;\n\t}\n\n\t/**\n\t * Construct a new AirplaneFuselageLocation object from xml node.\n\t * @param {XMLDOMNode} node XML node represents airplane fuselage coordinate. \n\t * @param {(Object|undefined)} attributesAssoc Associative array contains pairs of XML node attribute name and AirplaneFuselageLocation field name. <br>By default {'BSTA' : 'bsta', 'BWL' : 'bwl', 'BBL' : 'bbl'}\n\t * @returns The AirplaneBoundBox object\n\t * @type AirplaneBoundBox\n\t * @function AirplaneFuselageLocation#fromXMLNode\n\t */\n\tAirplaneFuselageLocation.prototype.fromXMLNode = function(node, attributesAssoc)\n\t{\n\t\tvar attributes = (typeof(attributesAssoc) == 'undefined') ? {'BSTA' : 'bsta', 'BWL' : 'bwl', 'BBL' : 'bbl'} : attributesAssoc,\n\t\t\tkey;\n\t\ttry \n\t\t{\n\t\t\tfor (key in attributes)\n\t\t\t\tthis[key] = parseFloat(node.getAttribute(attributes[key]));\n\t\t}\n\t\tcatch (exception)\n\t\t{\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a string representation of an Buttock Line side.\n\t * @returns \"RS\" or \"LS\"\n\t * @type String\n\t * @function AirplaneFuselageLocation#getBLSideString\n\t */\n\tAirplaneFuselageLocation.prototype.getBLSideString = function()\n\t{\n\t\treturn this.BBL < 0 ? 'LS' : this.BBL > 0 ? 'RS' : '';\n\t}\n\t\t\n\t/**\n\t * Returns a string representation of an object.\n\t * @returns A string of the following form: \"BSTA=..., BBL=..., BWL=...\"\n\t * @type String\n\t * @function AirplaneFuselageLocation#toString\n\t */\n\tAirplaneFuselageLocation.prototype.toString = defaultToString;\n\n\n\t/**\n\t * Construct a new ZSection object.\n\t * @classdesc Represents a set of maintenance zones in the airplane section.<br>\n\t * @param {String} xmlURL URL to load XML document describes maintenance zones for the airplane section if xmlAutoload is true.\n\t * @param {String} wrlURL URL to load VRML file contains maintenance zones geometry.\n\t * @param {Boolean} xmlAutoload Default is false. See &lt;String&gt; sUrlXml.\n\t * @class\n\t * @name ZSection\n\t */\n\tfunction ZSection(xmlURL, wrlURL, xmlAutoload)\n\t{\n\t\tvar peer = 0,\n\t\t\tpendingVisibleZones = [],\n\t\t\tloadContext = null;\n\n\t\tObject.defineProperty(this, '_document', {value: null, writable: true});\n\t\t\n\t\tif (xmlAutoload)\n\t\t\tloadXMLDocument(this, '_document', xmlURL);\n\n\t\tfunction setZoneVisibility(doc, zoneID, visible)\n\t\t{\n\t\t\tvar zone = doc ? doc.selectSingleNode(\"//zone[@id='\"+zoneID+\"']\") : null,\n\t\t\t\tshapes,\n\t\t\t\ti,\n\t\t\t\tnames = [];\n\t\t\tif (zone)\n\t\t\t{\n\t\t\t\tshapes = zone.selectNodes(\"shape/text()\");\n\t\t\t\tif (shapes.length)\n\t\t\t\t{\n\t\t\t\t\tfor (i = 0; i < shapes.length; ++i)\n\t\t\t\t\t\tnames.push(shapes[i].nodeValue);\n\t\t\t\t\tModule.ccall('stella_model_setZoneVisible', 'null', ['number', 'string', 'number'], [peer, names.join(' '), visible]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tObject.defineProperties(this,\n\t\t{\n\t\t\t/**\n\t\t\t * Loads XML document describes maintenance zones for the airplane section. Returns the object itself.\n\t\t\t * @param {String} xmlSyntax XML document describes maintenance zones as string.\n\t\t\t * @type ZSection\n\t\t\t * @function ZSection#loadXmlZones\n\t\t\t */\n\t\t\t'loadXmlZones':\n\t\t\t{\n\t\t\t\tvalue: function(xmlSyntax)\n\t\t\t\t{\n\t\t\t\t\tvar success = false;\n\t\t\t\t\tif (kUseXMLDOM)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis._document = new DOMParser().parseFromString(xmlSyntax, 'text/xml');\n\t\t\t\t\t\tsuccess = typeof(this.dom) === 'object';\n\t\t\t\t\t}\n\t\t\t\t\telse if (this._document)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis._document = new ActiveXObject('Microsoft.XMLDOM');\n\t\t\t\t\t\tthis._document.async = false;\n\t\t\t\t\t\tsuccess = this._document.loadXML(xmlSyntax);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (!success)\n\t\t\t\t\t\tconsole.log('An error occurred while loading zones metadata XML');\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t},\n\n\n\t\t\t/**\n\t\t\t * This onload callback is displayed as part of the ZSection class.\n\t\t\t * @callback ZSection~onLoadCallback\n\t\t\t */\n\n\t\t\t/**\n\t\t\t * This onerror callback is displayed as part of the ZSection class.\n\t\t\t * @callback ZSection~onErrorCallback\n\t\t\t * @param {string} errorMessage\n\t\t\t */\n\n\t\t\t/**\n\t\t\t * Loads geometry for mapping of the zones of section into the scene.\n\t\t\t * @function ZSection#load\n\t\t\t * @param {(ZSection~onLoadCallback|undefined)} onload TODO: OnLoad callback.\n\t\t\t * @param {(ZSection~onErrorCallback|undefined)} onerror TODO: OnError callback.\n\t\t\t */\n\t\t\t'load': \n\t\t\t{\n\t\t\t\tvalue: function(onload, onerror)\n\t\t\t\t{\n\t\t\t\t\tvar async = typeof(onload) === 'function';\n\t\t\t\t\tloadContext = !async ? null : {\n\t\t\t\t\t\tdidFinishLoadSection: onload,\n\t\t\t\t\t\tdidFailLoadSection: (typeof(onerror) === 'function' ? onerror : null),\n\t\t\t\t\t\tdocumentStatus: 0,\n\t\t\t\t\t\tsceneStatus: 0,\n\t\t\t\t\t\terrorText: null\n\t\t\t\t\t};\n\t\t\t\t\tif (!this._document)\n\t\t\t\t\t{\n\t\t\t\t\t\tloadXMLDocument(this, '_document', xmlURL, !async ? null : function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!loadContext.sceneStatus)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tloadContext.documentStatus = 1;\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (loadContext.sceneStatus > 0)\n\t\t\t\t\t\t\t\tloadContext.didFinishLoadSection();\n\t\t\t\t\t\t\telse if (loadContext.didFailLoadSection)\n\t\t\t\t\t\t\t\tloadContext.didFailLoadSection(loadContext.errorText);\n\t\t\t\t\t\t\tloadContext = null;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t!async ? null : function(errorText) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!loadContext.sceneStatus)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tloadContext.documentStatus = -1;\n\t\t\t\t\t\t\t\tloadContext.errorText = errorText;\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (loadContext.didFailLoadSection)\n\t\t\t\t\t\t\t\tloadContext.didFailLoadSection(errorText);\n\t\t\t\t\t\t\tloadContext = null;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif (!peer)\n\t\t\t\t\t{\n\t\t\t\t\t\tpeer = Module.ccall('stella_model_loadZones', 'number', ['string'], [wrlURL]);\n\t\t\t\t\t\tzsections[peer] = this;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Unloads geometry for mapping of the zones of section from the scene.\n\t\t\t * @function ZSection#unload\n\t\t\t */\n\t\t\t'unload': \n\t\t\t{\n\t\t\t\tvalue: function()\n\t\t\t\t{\n\t\t\t\t\tif (peer)\n\t\t\t\t\t{\n\t\t\t\t\t\tModule._stella_model_unloadZones(peer);\n\t\t\t\t\t\tdelete zsections[peer];\n\t\t\t\t\t\tpeer = 0;\n\t\t\t\t\t\tpendingVisibleZones = [];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Shows the geometry of the zone.\n\t\t\t * @param {String} zoneID Zone ID.\n\t\t\t * @function ZSection#showZone\n\t\t\t */\n\t\t\t'showZone':\n\t\t\t{\n\t\t\t\tvalue: function(zoneID)\n\t\t\t\t{\n\t\t\t\t\tif (pendingVisibleZones)\n\t\t\t\t\t\tpendingVisibleZones.push(zoneID);\n\t\t\t\t\telse\n\t\t\t\t\t\tsetZoneVisibility(this._document, zoneID, true);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Hides the geometry of the zone.\n\t\t\t * @param {String} zoneID Zone ID.\n\t\t\t * @function ZSection#hideZone\n\t\t\t */\n\t\t\t'hideZone':\n\t\t\t{\n\t\t\t\tvalue: function(zoneID)\n\t\t\t\t{\n\t\t\t\t\tvar i;\n\t\t\t\t\tif (pendingVisibleZones)\n\t\t\t\t\t{\n\t\t\t\t\t\ti = pendingVisibleZones.indexOf(zoneID);\n\t\t\t\t\t\tif (i >= 0)\n\t\t\t\t\t\t\tpendingVisibleZones.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tsetZoneVisibility(this._document, zoneID, false);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t'_didFinishLoad':\n\t\t\t{\n\t\t\t\tvalue: function()\n\t\t\t\t{\n\t\t\t\t\tvar i;\n\t\t\t\t\tif (pendingVisibleZones)\n\t\t\t\t\t\tfor (i = 0; i < pendingVisibleZones.length; ++i)\n\t\t\t\t\t\t\tsetZoneVisibility(this._document, pendingVisibleZones[i], true);\n\t\t\t\t\tpendingVisibleZones = null;\n\t\t\t\t\tif (loadContext)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (!loadContext.documentStatus)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tloadContext.sceneStatus = 1;\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (loadContext.documentStatus > 0)\n\t\t\t\t\t\t\tloadContext.didFinishLoadSection();\n\t\t\t\t\t\telse if (loadContext.didFailLoadSection)\n\t\t\t\t\t\t\tloadContext.didFailLoadSection(loadContext.errorText);\n\t\t\t\t\t\tloadContext = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tObject.defineProperty(ZSection, '_didFinishLoad',\n\t{\n\t\tvalue: function(peer)\n\t\t{\n\t\t\tif (zsections[peer])\n\t\t\t\tzsections[peer]._didFinishLoad();\n\t\t}\n\t});\n\n\tObject.defineProperties(ZSection.prototype,\n\t{\n\t\t/**\n\t\t * Returns the array of the strings with IDs of all zones of the section.\n\t\t * @returns The array of strings\n\t\t * @type Array\n\t\t * @function ZSection#getAllZones\n\t\t */\n\t\t'getAllZones':\n\t\t{\n\t\t\tvalue: function()\n\t\t\t{\n\t\t\t\tvar zones = [],\n\t\t\t\t\tnodes,\n\t\t\t\t\ti;\n\t\t\t\tif (this._document)\n\t\t\t\t{\n\t\t\t\t\tnodes = this._document.selectNodes(\"//zone\");\n\t\t\t\t\tfor (i = 0; i < nodes.length; ++i)\n\t\t\t\t\t\tzones.push(nodes[i].getAttribute('id'));\n\t\t\t\t}\n\t\t\t\treturn zones;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns the section ID.\n\t\t * @returns Section ID\n\t\t * @type String\n\t\t * @function ZSection#getSectionId\n\t\t */\n\t\t'getSectionId':\n\t\t{\n\t\t\tvalue: function()\n\t\t\t{\n\t\t\t\tvar section = \"\",\n\t\t\t\t\tzones;\n\t\t\t\tif (this._document)\n\t\t\t\t{\n\t\t\t\t\tzones = this._document.selectSingleNode(\"//zones\");\n\t\t\t\t\tif (zones)\n\t\t\t\t\t\tsection = zones.getAttribute('section_id');\n\t\t\t\t}\n\t\t\t\treturn section;\n\t\t\t}\n\t\t},\n\t\t\t\n\t\t/**\n\t\t * Returns the text identifier of zone (Zone ID), \n\t\t * to which belongs the point with the coordinates assigned by object. \n\t\t * Returns null, if point does not belong to any of the zones.\n\t\t * (Search will be produced only among those zones, into which enters this element).\n\t\t * @param {(Location|Dot)} object The {@link Location} or {@link Dot} object.\n\t\t * @param {(String|undefined)} elementName Parameter for increasing accuracy and speed of the definition of zone. It contains the ID of the structure element, to which this point belongs.\n\t\t * @returns Zone ID or null.\n\t\t * @type String|Null\n\t\t * @function ZSection#getZone\n\t\t */\n\t\t'getZone':\n\t\t{\n\t\t\tvalue: function(object, elementName)\n\t\t\t{\t\n\t\t\t\tif (this._document)\n\t\t\t\t{\n\t\t\t\t\tvar hasElementName = (typeof(elementName) !== 'undefined' && elementName != ''),\n\t\t\t\t\t\tzonesWithItem = this._document.selectNodes(hasElementName ? \"//zone[zoneitems/item/text()='\" + elementName + \"']\" : \"//zone\"),\n\t\t\t\t\t\tpointLocation,\n\t\t\t\t\t\tcoordX,\n\t\t\t\t\t\tcoordY,\n\t\t\t\t\t\tcoordZ,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tj,\n\t\t\t\t\t\tz,\n\t\t\t\t\t\tplanes,\n\t\t\t\t\t\tp,\n\t\t\t\t\t\tacceptablePlanes,\n\t\t\t\t\t\tnearestZone,\n\t\t\t\t\t\td,\n\t\t\t\t\t\tshortestDistance,\n\t\t\t\t\t\tboxDistance,\n\t\t\t\t\t\tboxes;\n\n\t\t\t\t\tif (zonesWithItem.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (object.constructor === Location)\n\t\t\t\t\t\t\tpointLocation = object;\n\t\t\t\t\t\telse if (object.constructor === Dot)\n\t\t\t\t\t\t\tpointLocation = object.location;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcoordX = pointLocation.x;\n\t\t\t\t\t\tcoordY = pointLocation.y;\n\t\t\t\t\t\tcoordZ = pointLocation.z;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tfor (j = 0; j < zonesWithItem.length; ++j)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tboxes = zonesWithItem[j].selectNodes(\"boxes/box\");\t\t\t\t\n\t\t\t\t\t\t\tfor (z = 0; z < boxes.length; ++z)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tplanes = boxes[z].selectNodes(\"plane\");\n\t\t\t\t\t\t\t\tacceptablePlanes = 0;\n\t\t\t\t\t\t\t\tfor (i = 0; i < planes.length; ++i)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tp = planes[i];\n\t\t\t\t\t\t\t\t\tif (p.getAttribute('a') * coordX + p.getAttribute('b') * coordY + p.getAttribute('c') * coordZ <= p.getAttribute('d'))\n\t\t\t\t\t\t\t\t\t\tacceptablePlanes++;\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (acceptablePlanes == planes.length)\n\t\t\t\t\t\t\t\t\treturn zonesWithItem[j].getAttribute('id');\n\t\t\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (hasElementName)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnearestZone = null;\n\t\t\t\t\t\t\tshortestDistance = 100;\n\t\t\t\t\t\t\tfor (j = 0; j < zonesWithItem.length; ++j)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tboxDistance = 101;\n\t\t\t\t\t\t\t\tboxes = zonesWithItem[j].selectNodes(\"boxes/box\");\t    \t\t\t\n\t\t\t\t\t\t\t\tfor (z = 0; z < boxes.length; ++z)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tplanes = boxes[z].selectNodes(\"plane\");\n\t\t\t\t\t\t\t\t\tacceptablePlanes = 0;\n\t\t\t\t\t\t\t\t\tfor (i = 0; i < planes.length; ++i)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tp = planes[i];\n\t\t\t\t\t\t\t\t\t\td = p.getAttribute('a') * coordX + p.getAttribute('b') * coordY + p.getAttribute('c') * coordZ - p.getAttribute('d');\n\t\t\t\t\t\t\t\t\t\tif (d <= 0)\n\t\t\t\t\t\t\t\t\t\t\tacceptablePlanes++;\n\t\t\t\t\t\t\t\t\t\telse if (boxDistance > d)\n\t\t\t\t\t\t\t\t\t\t\tboxDistance = d;\t    \t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif ((acceptablePlanes == planes.length - 1) && shortestDistance > boxDistance)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tshortestDistance = boxDistance;\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tnearestZone = zonesWithItem[j];\n\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (nearestZone)\t\t\t\t\t\n\t\t\t\t\t\t\t\treturn nearestZone.getAttribute('id');\n\t\t\t\t\t\t}    \t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}, \n\n\t\t/**\n\t\t * Returns the array of the strings with ID of all structure elements, which belong to the zone.\n\t\t * @param {String} zoneID Zone ID.\n\t\t * @returns The array of String\n\t\t * @type Array\n\t\t * @function ZSection#getAllElementsInZone\n\t\t */\n\t\t'getAllElementsInZone':\n\t\t{\n\t\t\tvalue: function(zoneID)\n\t\t\t{\n\t\t\t\tvar elements = [],\n\t\t\t\t\tnodes,\n\t\t\t\t\ti;\n\t\t\t\tif (this._document)\n\t\t\t\t{\n\t\t\t\t\tnodes = this._document.selectNodes(\"//zone[@id='\"+zoneID+\"']/zoneitems/item/text()\");\n\t\t\t\t\tfor (i = 0; i < nodes.length; ++i)\n\t\t\t\t\t\telements.push(nodes[i].nodeValue);\n\t\t\t\t}\n\t\t\t\treturn elements;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * Construct a new Metadata object.\n\t * @classdesc This class is used for work with an airplane VRML model metadata.<br>\n\t * @class\n\t * @name Metadata\n\t */\n\tfunction Metadata()\n\t{\n\t\tthis.dom = null;\n\t}\n\n\t/**\n\t * Converts airplane section code to airplane section Id \n\t * @param {String} sectionCode Airplane section code\n\t * @returns Airplane section Id (attribute \"id\" of the element <section>)\n\t * @type String\n\t * @function Metadata#sectionCodeToId\n\t */\n\tMetadata.prototype.sectionCodeToId = function(sectionCode)\n\t{\n\t\tif (this.isAvailable())\n\t\t{\n\t\t\tvar id = null;\n\t\t\ttry \n\t\t\t{\n\t\t\t\tid = this.dom.selectSingleNode('(//section | //fullbird)[@code=\"' + sectionCode + '\"]').getAttribute('id');\n\t\t\t}\n\t\t\tcatch (exception)\n\t\t\t{\n\t\t\t}\n\t\t\tif (!id)\n\t\t\t{\n\t\t\t\ttry \n\t\t\t\t{\n\t\t\t\t\tid = this.dom.selectSingleNode('/airplane/fullbird//item[.=\"' + sectionCode + '\"]').getAttribute('ref');\n\t\t\t\t}\n\t\t\t\tcatch (exception)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!id)\n\t\t\t\tid = this.dom.selectSingleNode('/airplane/fullbird').getAttribute('id');\n\t\t\treturn id;\n\t\t}\n\t}\n\t\t\n\t/**\n\t * Converts airplane section Id to airplane section code \n\t * @param {String} sectionID Airplane section Id (attribute \"id\" of the element <section>)\n\t * @returns Airplane Section code \n\t * @type String\n\t * @function Metadata#sectionIdToCode\n\t */\n\tMetadata.prototype.sectionIdToCode = function(sectionID)\n\t{\n\t\tif (this.isAvailable())\n\t\t{\n\t\t\tvar code = null;\n\t\t\ttry \n\t\t\t{\n\t\t\t\tcode = this.dom.selectSingleNode('(//fullbird | //section)[@id=\"' + sectionID + '\"]').getAttribute('code');\n\t\t\t}\n\t\t\tcatch (exception)\n\t\t\t{\n\t\t\t}\n\t\t\tif (!code)\n\t\t\t{\n\t\t\t\ttry \n\t\t\t\t{\n\t\t\t\t\tcode = this.dom.selectSingleNode('/airplane/fullbird//item[@ref=\"' + sectionID + '\"]/text()').nodeValue;\n\t\t\t\t}\n\t\t\t\tcatch (exception)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!code)\n\t\t\t\tcode = \"FULLBIRD_SECTION_MAP\";\n\t\t\treturn code;\n\t\t}\n\t}\n\t\t\n\t/**\n\t * Check is metadata XML loaded successfully.\n\t * @return true/false\n\t * @type boolean\n\t * @function Metadata#isAvailable\n\t */\n\tMetadata.prototype.isAvailable = function() \n\t{\n\t\treturn this.dom && this.dom.documentElement;\n\t}\n\t\n\tfunction loadXMLDocument(self, docProperty, url, onload, onerror)\n\t{\n\t\tvar xhr,\n\t\t\tasync = typeof(onload) === 'function';\n\t\tif (kUseXMLDOM)\n\t\t{\n\t\t\txhr = new XMLHttpRequest();\n\t\t\txhr.open('GET', url, async);\n\t\t\txhr.responseType = 'document';\n\t\t\txhr.overrideMimeType('text/xml');\n\t\t\tif (async)\n\t\t\t{\n\t\t\t\txhr.onload = function()\n\t\t\t\t{\n\t\t\t\t\tvar success = xhr.status == 200 && xhr.responseXML;\n\t\t\t\t\tif (success)\n\t\t\t\t\t{\n\t\t\t\t\t\tself[docProperty] = xhr.responseXML;\n\t\t\t\t\t\tonload();\n\t\t\t\t\t}\n\t\t\t\t\telse if (typeof(onerror) === 'function')\n\t\t\t\t\t\tonerror(xhr.status != 200 ? xhr.statusText + ' (status code: '+ xhr.status + ')' : \"Malformed XML\");\n\t\t\t\t}\n\t\t\t\txhr.onerror = function()\n\t\t\t\t{\n\t\t\t\t\tif (typeof(onerror) === 'function')\n\t\t\t\t\t\tonerror(xhr.statusText + ' (status code: '+ xhr.status + ')');\n\t\t\t\t}\n\t\t\t}\n\t\t\txhr.send();\n\t\t\tif (!async)\n\t\t\t\tself[docProperty] = xhr.responseXML;\n\t\t\treturn async || typeof(xhr.responseXML) === 'object';\n\t\t}\n\t\telse\n\t\t{\n\t\t\txhr = new ActiveXObject('Microsoft.XMLDOM');\n\t\t\txhr.async = async;\n\t\t\tif (async)\n\t\t\t{\n\t\t\t\txhr.onreadystatechange = function()\n\t\t\t\t{\n\t\t\t\t\tif (xhr.readyState == 4)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (xhr.parseError.errorCode == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tself[docProperty] = xhr;\n\t\t\t\t\t\t\tonload();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (typeof(onerror) === 'function')\n\t\t\t\t\t\t\t\tonerror(xhr.parseError.reason);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t\tself[docProperty] = xhr;\n\t\t\treturn xhr.load(url);\n\t\t}\n\t}\n\n\t/**\n\t * Loads a metadata XML document from the specified location.\n\t * @returns Returns True if the load succeeded; False if the load failed.\n\t * @type boolean\n\t * @function Metadata#load\n\t */\n\tMetadata.prototype.load = function(url, onload, onerror)\n\t{\n\t\treturn loadXMLDocument(this, 'dom', url, onload ? onload : null, onerror ? onerror : null);\n\t}\n\n\t/**\n\t * Return coordinates of sections offset\n\t * @param {String} sectionCode VRML section code\n\t * @returns Coordinates of sections offset\n\t * @type AirplaneFuselageLocation\n\t * @function Metadata#getOffsetForSection\n\t */\n\tMetadata.prototype.getOffsetForSection = function(sectionCode)\n\t{\n\t\tvar bsta = 0,\n\t\t\tbwl = 0,\n\t\t\tbbl = 0,\n\t\t\tsectionID,\n\t\t\tsection,\n\t\t\toffset;\n\n\t\tif (this.isAvailable())\n\t\t{\n\t\t\tsectionID = this.sectionCodeToId(sectionCode);\n\t\t\tsection = this.dom.selectSingleNode('//section[@id=\"'+sectionID+'\"]');\n\t\t\t//section = this.dom.selectSingleNode(function(oNode) { return (oNode.nodeName == \"section\" && oNode.getAttribute('id') == sSectionID) }, false);\n\t\t\tif (section)\n\t\t\t{\n\t\t\t\toffset = section.getAttribute('offset-bsta');\n\t\t\t\tif (offset)\n\t\t\t\t\tbsta = parseFloat(offset);\n\t\t\t\toffset = section.getAttribute('offset-bwl');\n\t\t\t\tif (offset)\n\t\t\t\t\tbwl = parseFloat(offset);\n\t\t\t\toffset = section.getAttribute('offset-bbl');\n\t\t\t\tif (offset)\n\t\t\t\t\tbbl = parseFloat(offset);\n\t\t\t}\n\t\t}\n\t\treturn new AirplaneFuselageLocation(bsta, bwl, bbl);\n\t}\n\t/**\n\t * Transforms Airplane Fuselage coordinates to VRML coordinates based on information about offset of the section VRML model.\n\t * @param {AirplaneFuselageLocation} airplaneFuselageLocation Object represents airplane fuselage coordinates.\n\t * @returns Location of the repair dot in VRML coordinates\n\t * @type Location\n\t * @function Metadata#coordAirplaneFuselageToVRML\n\t */\n\tMetadata.prototype.coordAirplaneFuselageToVRML = function(airplaneFuselageLocation)\n\t{\n\t\tvar k = theModel.AC_SCALE_POWER,\n\t\t\tx = -airplaneFuselageLocation.BBL / k,\n\t\t\ty = airplaneFuselageLocation.BWL / k,\n\t\t\tz = -airplaneFuselageLocation.BSTA / k;\n\n\t\treturn new Location(x, y, z);\n\t}\n\n\t/**\n\t * Transforms VRML coordinates to Airplane Fuselage coordinates based on information about offset of the airplane section VRML model.\n\t * @param {Location} location Object represents VRML coordinates.\n\t * @returns Airplane Fuselage coordinates of the repair dot.\n\t * @type AirplaneFuselageLocation\n\t * @function Metadata#coordVRMLToAirplaneFuselage\n\t */\n\tMetadata.prototype.coordVRMLToAirplaneFuselage = function(location) \n\t{\n\t\tvar k = theModel.AC_SCALE_POWER,\n\t\t\tbsta = -location.z * k,\n\t\t\tbwl = location.y * k,\n\t\t\tbbl = -location.x * k;\n\n\t\treturn new AirplaneFuselageLocation(bsta, bwl, bbl);\n\t}\n\n\t/**\n\t * Converts the actual BSTA coordinate to the string representation appropriate for the current airplane.\n\t * Performs all calculations to separate the \"base\" value and the \"additional\" value and adds\n\t * the corresponding letter, if the airplane uses the \"letter\" convention.\n\t * <br>\n\t * The following cases are possible:\n\t * <ul>\n\t * <li>If the airplane is not a derivative model, or if the coordinate does not belong to \"inserted\" blocks,\n\t *     then the returned string contains only a number, e.g. \"300\". Note that this number can differ from the\n\t *     actual coordinate if the coordinate is \"behind\" one or more \"inserted\" blocks.\n\t * <li>If the coordinate coincides with the coordinate of an \"inserted\" frame, then the returned value\n\t *     corresponds to the name of this frame, e.g. \"500+40\" for airplanes using the \"plus\" convention or\n\t *     \"500B\" for airplanes using the \"letter\" convention.\n\t * <li>If the coordinate belongs to an \"inserted\" block but does not coincide with any frame, then the\n\t *     returned value takes the form \"500+43\" for airplanes using the \"plus\" convention or \"500B+3\" for\n\t *     airplanes using the \"letter\" convention.\n\t * </ul>\n\t * @param {float} bsta Actual BSTA coordinate, e.g. taken from the {@link AirplaneFuselageLocation} object\n\t * @param {int} precision The number of fractional digits to be returned\n\t * @returns String representation of the coordinate appropriate for the current airplane\n\t * @type String\n\t * @function Metadata#coordBSTAToExtendedBSTA\n\t */\n\tMetadata.prototype.coordBSTAToExtendedBSTA = function(bsta, precision)\n\t{\n\t\ttry\n\t\t{\n\t\t\tvar insertions = this.dom.selectNodes(\"airplane/fuselage-coordinates/*\"),\n\t\t\t\ti,\n\t\t\t\tj,\n\t\t\t\tstr,\n\t\t\t\tins,\n\t\t\t\tlastBefore,\n\t\t\t\tfirstAfter,\n\t\t\t\tdist,\n\t\t\t\tsize,\n\t\t\t\tdelta,\n\t\t\t\toffset,\n\t\t\t\tframes;\n\t\n\t\t\tfor (i = 0; i < insertions.length; ++i)\n\t\t\t{\n\t\t\t\tins = insertions[i];\n\t\t\t\tlastBefore = parseFloat(ins.getAttribute(\"last-before\"));\n\t\t\t\tfirstAfter = parseFloat(ins.getAttribute(\"first-after\"));\n\t\t\t\tdist = parseFloat(ins.getAttribute(\"first-inserted-distance\"));\n\n\t\t\t\tif (bsta < lastBefore)\n\t\t\t\t\treturn _round(bsta, precision);\n\n\t\t\t\tif (ins.tagName == \"insertion-plus\")\n\t\t\t\t{\n\t\t\t\t\tsize = parseFloat(ins.getAttribute(\"size\"));\n\t\t\t\t\tif (bsta < firstAfter + size)\n\t\t\t\t\t{\n\t\t\t\t\t\tdelta = bsta - lastBefore;\n\t\t\t\t\t\tstr = \"+\" + _round(delta, precision);\n\t\t\t\t\t\tif (str == \"+0\")\n\t\t\t\t\t\t\tstr = \"\";\n\t\t\t\t\t\treturn _round(lastBefore, precision) + str;\n\t\t\t\t\t}\n\t\t\t\t\tbsta -= size;\n\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse if (ins.tagName == \"insertion-letter\")\n\t\t\t\t{\n\t\t\t\t\toffset = bsta - lastBefore;\n\t\t\t\t\t\n\t\t\t\t\tif (offset < dist)\n\t\t\t\t\t{\n\t\t\t\t\t\tstr = \"+\" + _round(offset, precision);\n\t\t\t\t\t\tif (str == \"+0\")\n\t\t\t\t\t\t\tstr = \"\";\n\t\t\t\t\t\treturn _round(lastBefore, precision) + str;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\toffset -= dist;\n\t\t\t\t\tframes = ins.selectNodes(\"inserted-frame\");\n\t\t\t\t\t\n\t\t\t\t\tfor (j = 0; j < frames.length; ++j)\n\t\t\t\t\t{\n\t\t\t\t\t\tdelta = parseFloat(frames[j].getAttribute(\"distance-to-next\"));\n\t\t\t\t\t\tif (offset < delta)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstr = \"+\" + _round(offset, precision);\n\t\t\t\t\t\t\tif (str == \"+0\")\n\t\t\t\t\t\t\t\tstr = \"\";\n\t\t\t\t\t\t\treturn _round(lastBefore, precision) + frames[j].getAttribute(\"letter\") + str;\n\t\t\t\t\t\t}\n\t\t\t\t\t\toffset -= delta;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbsta = firstAfter + offset;\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t}\n\t\t\n\t\treturn _round(bsta, precision);\n\t}\n\n\t/**\n\t * Converts the string representation of the BSTA coordinate to the actual numeric BSTA value. The string\n\t * representation must follow the convention of the current airplane. The returned value can then be used to\n\t * construct an {@link AirplaneFuselageLocation} object. If the string uses the wrong convention or otherwise\n\t * can't be parsed, -1 is returned.\n\t * <br>\n\t * The following patterns are supported:\n\t * <ul>\n\t * <li>Simple number: \"300\"\n\t * <li>For airplanes using the \"plus\" convention: \"500+43\"\n\t * <li>For airplanes using the \"letter\" convention: \"500B\"\n\t * <li>For airplanes using the \"letter\" convention: \"500B+3\"\n\t * </ul>\n\t * @param {string} sBSTA String representation of the BSTA coordinate appropriate for the current airplane\n\t * @returns Actual BSTA coordinate that can be used to construct an {@link AirplaneFuselageLocation} object,\n\t *          or -1 if the input string can't be parsed according to the current airplane convention\n\t * @type number\n\t * @function Metadata#coordExtendedBSTAToBSTA\n\t */\n\tMetadata.prototype.coordExtendedBSTAToBSTA = function(sBSTA)\n\t{\n\t\tvar arr,\n\t\t\tbase,\n\t\t\tplus,\n\t\t\tsrcLetter,\n\t\t\tfoundPlus,\n\t\t\tfoundLetter,\n\t\t\tinsertions,\n\t\t\ti,\n\t\t\tj,\n\t\t\tins,\n\t\t\tlastBefore,\n\t\t\tfirstAfter,\n\t\t\tdist,\n\t\t\tframes,\n\t\t\twidth,\n\t\t\tletter;\n\t\ttry\n\t\t{\n\t\t\tarr = String(sBSTA).toUpperCase().replace(\",\", \".\").replace(/ /g, \"\").split(\"+\");\n\t\t\tif (arr.length != 1 && arr.length != 2)\n\t\t\t\treturn -1;\n\n\t\t\tbase = parseFloat(arr[0]);\n\t\t\tif (isNaN(base))\n\t\t\t\treturn -1;\n\n\t\t\tplus = 0;\n\t\t\tif (arr.length == 2)\n\t\t\t{\n\t\t\t\tplus = parseFloat(arr[1]);\n\t\t\t\tif(isNaN(plus))\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tsrcLetter = arr[0].substring(arr[0].length - 1);\n\t\t\tif (srcLetter < \"A\" || srcLetter > \"Z\")\n\t\t\t\tsrcLetter = \"\";\n\t\t\t\t\n\t\t\tfoundPlus = false,\n\t\t\tfoundLetter = false;\t\n\t\t\tinsertions = this.dom.selectNodes(\"airplane/fuselage-coordinates/*\");\n\t\t\t\n\t\t\tfor (i = insertions.length - 1; i >= 0; --i)\n\t\t\t{\n\t\t\t\tins = insertions[i];\n\t\t\t\tlastBefore = parseFloat(ins.getAttribute(\"last-before\"));\n\t\t\t\tfirstAfter = parseFloat(ins.getAttribute(\"first-after\"));\n\t\t\t\tdist = parseFloat(ins.getAttribute(\"first-inserted-distance\"));\n\t\t\t\t\n\t\t\t\tif (ins.tagName == \"insertion-plus\")\n\t\t\t\t{\n\t\t\t\t\tif (base >= firstAfter)\n\t\t\t\t\t\tbase += parseFloat(ins.getAttribute(\"size\"));\n\t\t\t\t\telse if (base >= lastBefore)\n\t\t\t\t\t\tfoundPlus = true;\n\n\t\t\t\t}\n\t\t\t\telse if (ins.tagName == \"insertion-letter\")\n\t\t\t\t{\n\t\t\t\t\tframes = ins.selectNodes(\"inserted-frame\");\n\t\t\t\t\tif (base >= firstAfter)\n\t\t\t\t\t{\n\t\t\t\t\t\tbase -= firstAfter-lastBefore;\n\t\t\t\t\t\tbase += dist;\n\t\t\t\t\t\tfor (j = frames.length - 1; j >= 0; --j)\n\t\t\t\t\t\t\tbase += parseFloat(frames[j].getAttribute(\"distance-to-next\"));\n\t\t\t\t\t}\n\t\t\t\t\telse if (base >= lastBefore)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (srcLetter == \"\")\n\t\t\t\t\t\t\tfoundPlus = true;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tbase += dist;\n\n\t\t\t\t\t\tfor (j = frames.length - 1; j >= 0; --j)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\twidth = parseFloat(frames[j].getAttribute(\"distance-to-next\"));\n\t\t\t\t\t\t\tletter = frames[j].getAttribute(\"letter\");\n\t\t\t\t\t\t\tif (srcLetter==letter)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfoundPlus = true;\n\t\t\t\t\t\t\t\tfoundLetter = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (srcLetter > letter)\n\t\t\t\t\t\t\t\tbase+=width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (plus != 0 && !foundPlus || srcLetter != \"\" && !foundLetter)\n\t\t\t\treturn -1;\n\n\t\t\treturn base + plus;\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\t/**\n\t * Gets the airplane section bounding box.\n\t * @param {String} sectionCode Airplane section code\n\t * @returns Airplane section bounding box.\n\t * @type AirplaneBoundBox\n\t * @function Metadata#getSectionBB\n\t */\n\tMetadata.prototype.getSectionBB = function(sectionCode)\n\t{\n\t\tvar bbox = new AirplaneBoundBox(),\n\t\t\tsectionID,\n\t\t\tsection;\n\t\t\n\t\tif (this.isAvailable())\n\t\t{\n\t\t\tsectionID = this.sectionCodeToId(sectionCode);\n\t\t\tsection = this.dom.selectSingleNode('//section[@id=\"'+sectionID+'\"]');\n\t\t\ttry\n\t\t\t{\n\t\t\t\tbbox.fromXMLNode(section.selectSingleNode('boundbox'));\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t}\n\t\t}\n\t\treturn bbox;\n\t}\n\n\t/**\n\t * Estimates what Airplane section(s) a repair dot (defined in Airplane Fuselage coordinates) could be valid for.\n\t * @param {AirplaneFuselageLocation} airplaneFuselageLocation Object represents airplane fuselage coordinates.\n\t * @returns Array of possible airplane sections (as airplane section codes, e.g. \"FULLBIRD_WNG_L\") that the coordinates could be valid for.\n\t * @type Array\n\t * @function Metadata#getAirplaneSectionsForLocation\n\t */\n\tMetadata.prototype.getAirplaneSectionsForLocation = function(airplaneFuselageLocation)\n\t{\n\t\tvar result = [],\n\t\t\tsections,\n\t\t\ti,\n\t\t\tsectionID,\n\t\t\tsectionCode;\n\t\tif (this.isAvailable())\n\t\t{\n\t\t\tsections = this.dom.selectNodes('//section');\n\t\t\tfor (i = 0; i < sections.length; ++i)\n\t\t\t{\n\t\t\t\tsectionID = sections[i].getAttribute('id');\n\t\t\t\tsectionCode = this.sectionIdToCode(sectionID);\n\t\t\t\tif (this.getSectionBB(sectionCode).isInside(airplaneFuselageLocation))\n\t\t\t\t\tresult.push(sectionCode);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * Estimates what Airplane fuselage section(s) a repair dot (defined in Airplane Fuselage coordinates) could be valid for.\n\t * @param {AirplaneFuselageLocation} airplaneFuselageLocation Object represents airplane fuselage coordinates.\n\t * @returns Array of possible airplane fuselage sections (as airplane section codes, e.g. \"FULLBIRD_FUS_SEC41\") that the coordinates could be valid for.\n\t * @type Array\n\t * @function Metadata#getFuselageSectionsForLocation\n\t */\n\tMetadata.prototype.getFuselageSectionsForLocation = function(airplaneFuselageLocation)\n\t{\n\t\tvar result = [],\n\t\t\tsections,\n\t\t\ti,\n\t\t\tsectionID,\n\t\t\tsectionCode;\n\t\tif (this.isAvailable())\n\t\t{\n\t\t\tsections = this.dom.selectNodes('//section');\n\t\t\tfor (i = 0; i < sections.length; ++i)\n\t\t\t{\n\t\t\t\tsectionID = sections[i].getAttribute('id');\n\t\t\t\tif (sectionID.indexOf(\"_FUS_\") >= 0 || sectionID.indexOf(\"_C\") >= 0)\n\t\t\t\t{\n\t\t\t\t\tsectionCode = this.sectionIdToCode(sectionID);\n\t\t\t\t\tif (this.getSectionBB(sectionCode).isInside(airplaneFuselageLocation))\n\t\t\t\t\t\tresult.push(sectioncode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * Chooses a viewpoint that is suitable for a repair dot to be observed.\n\t * @param {Location} location Object represents VRML coordinates.\n\t * @param {String} sectionCode Airplane section code\n\t * @returns A Viewpoint object.\n\t * @type Viewpoint\n\t * @function Metadata#chooseViewpoint\n\t */\n\tMetadata.prototype.chooseViewpoint = function(location, sectionCode)\n\t{\n\t\tvar\tcv = this.coordAirplaneFuselageToVRML(this.getSectionBB(sectionCode).center, sectionCode),\n\t\t\tsp = stackSave(),\n\t\t\tdata = stackAlloc(28),\n\t\t\tkRatio = 3,\n\t\t\tviewpoint = new Viewpoint();\n\n\t\tfloat3_fromLocation(data, location);\n\t\tfloat3_fromLocation(data + 12, cv);\n\t\tsetValue(data + 24, kRatio, 'float');\n\n\t\tModule._stella_utility_getBestViewpoint(data);\n\n\t\tviewpoint.position = float3_asArray(data);\n\t\tviewpoint.orientation = float4_asArray(data + 12);\n\t\tviewpoint.centerpoint = location.toArray();\n\t\tstackRestore(sp);\n\t\treturn viewpoint;\n\t}\n\n\t/**\n\t * Returns the array of the ATA objects. The returned ATA items (Section or Unit) are related to the structure elements in the zone.\n\t * @param {ZSection} zSection ZSection object.\n\t * @param {String} zoneID Zone Id.\n\t * @returns The array of {@link ATA} objects\n\t * @type Array\n\t * @function Metadata#getATAForZone\n\t */\n\tMetadata.prototype.getATAForZone = function(zSection, zoneID)\n\t{\n\t\tvar ata = [],\n\t\t\tassoc,\n\t\t\tsectionID,\n\t\t\tsectionNode,\n\t\t\ti,\n\t\t\tj,\n\t\t\tnodes,\n\t\t\tkey,\n\t\t\tvalue;\n\t\tif (this.dom) \n\t\t{\n\t\t\tassoc = Object.create(null);\n\t\t\tsectionID = zSection.getSectionId();\n\t\t\telements = zSection.getAllElementsInZone(zoneID);\n\t\t\tsectionNode = this.dom.selectSingleNode(\"//section[@id='\"+sectionID+\"']\");\n\t\t\tfor (i = 0; i < elements.length; ++i)\n\t\t\t{\n\t\t\t\tnodes = sectionNode.selectNodes(\".//item[.='\"+elements[i]+\"']\");\n\t\t\t\tfor (j = 0; j < nodes.length; ++j)\n\t\t\t\t{\n\t\t\t\t\tvalue = nodes[j].getAttribute('ATA');\n\t\t\t\t\tif (value != null)\n\t\t\t\t\t\tassoc[value] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (key in assoc)\n\t\t\t\tata.push(key);\n\t\t\tata.sort();\n\t\t\tfor (i = 0; i < ata.length; ++i)\n\t\t\t{\n\t\t\t\tvalue = this.dom.selectSingleNode(\"//atadescription[@ATA='\"+ ata[i] +\"']/text()\");\n\t\t\t\tvalue = value ? value.nodeValue : \"\";\n\t\t\t\tata[i] = new ATA(ata[i], description);\n\t\t\t}\n\t\t}\n\t\treturn ata;\n\t}\n\t\t\n\tfunction _round(value, precision)\n\t{\n\t\tvar mult = Math.round(Math.pow(10, Math.max(precision, 0)));\n\t\treturn String(Math.round(value * mult) / mult);\n\t}\n\t\t\n\t/**\n\t * Construct a new ATA object.\n\t * @classdesc Represents information on particular ATA item (Section or Unit).<br>\n\t * @class\n\t * @name ATA\n\t */\n\tfunction ATA(ata, description)\n\t{\n\t\t/**\n\t\t * ATA number.\n\t\t * @type String\n\t\t * @name ATA#ata\n\t\t */\n\t\tthis.ata = ata;\n\n\t\t/**\n\t\t * ATA description.\n\t\t * @type String\n\t\t * @name ATA#description\n\t\t */\n\t\tthis.description = description;\n\t}\n\n\t/**\n\t * Returns a string representation of an object.\n\t * @type String\n\t * @function ATA#toString\n\t */\n\tATA.prototype.toString = function()\n\t{\n\t\treturn this.ata + (this.description ? (\" - \" + this.description) : \"\");\n\t}\n\n\n\t/**\n\t * Constructs a new tooltip object. Used internally by the framework.\n\t * @classdesc Object that is used by the framework to show tooltips in 3D view.\n\t * @param {HTMLElement} tooltip HTML object of <div> element, which is used to format tooltips.\n\t * @class\n\t * @name Tooltip\n\t */\n\tfunction Tooltip(tooltip) \n\t{\n\t\tvar text = '',\n\t\t\ttooltipNode = tooltip,\n\t\t\ttimeout = 0,\n\t\t\tvisible = false,\n\t\t\ttooltipX = 0,\n\t\t\ttooltipY = 0;\n\n\t\tthis.delay = 500;\n\t\tthis.TOOLTIP_DX = 12;\n\t\tthis.TOOLTIP_DY = 12;\n\n\t\tObject.defineProperties(this, \n\t\t{\n\t\t\t/**\n\t\t\t * Sets the tooltip text.\n\t\t\t * @param {String} syntax The HTML formatted tooltip text.\n\t\t\t * @function Tooltip#setTooltipHTML\n\t\t\t */\n\t\t\t'setTooltipHTML':\n\t\t\t{\n\t\t\t\tvalue: function(syntax) \n\t\t\t\t{\n\t\t\t\t\ttext = syntax;\n\t\t\t\t}\n\t\t\t},\n\t\t\t'show':\n\t\t\t{\n\t\t\t\tvalue: function(x, y)\n\t\t\t\t{\n\t\t\t\t\tvar dx = this.TOOLTIP_DX,\n\t\t\t\t\t\tdy = this.TOOLTIP_DY;\n\t\t\t\t\ttooltipNode.innerHTML = text;\n\t\t\t\t\tif (visible)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tif (arguments.length >= 2)\n\t\t\t\t\t{\n\t\t\t\t\t\ttooltipX = x;\n\t\t\t\t\t\ttooltipY = y;\n\t\t\t\t\t}\n\n\t\t\t\t\tclearTimeout(timeout);\n\t\t\t\t\ttimeout = setTimeout(function()\n\t\t\t\t\t{\n\t\t\t\t\t\tvar parentRect = tooltipNode.parentNode.getBoundingClientRect(),\n\t\t\t\t\t\t\tleft = Math.min(tooltipX + dx, parentRect.right - parentRect.left - tooltipNode.offsetWidth),\n\t\t\t\t\t\t\ttop = Math.min(tooltipY + dy, parentRect.bottom - parentRect.top - tooltipNode.offsetHeight),\n\t\t\t\t\t\t\tstyle = tooltipNode.style;\n\t\t\n\t\t\t\t\t\tstyle.left = left + 'px';\n\t\t\t\t\t\tstyle.top = top + 'px';\n\t\t\t\t\t\ttooltipNode.classList.add('is-visible');\n\t\t\t\t\t\tvisible = true;\n\t\t\t\t\t}, this.delay);\n\t\t\t\t}\n\t\t\t},\n\t\t\t'hide':\n\t\t\t{\n\t\t\t\tvalue: function()\n\t\t\t\t{\n\t\t\t\t\tclearTimeout(timeout);\n\t\t\t\t\ttimeout = 0;\n\t\t\t\t\tif (visible)\n\t\t\t\t\t{\n\t\t\t\t\t\ttooltipNode.classList.remove('is-visible');\n\t\t\t\t\t\tvisible = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t'_moveTo':\n\t\t\t{\n\t\t\t\tvalue: function(x, y)\n\t\t\t\t{\n\t\t\t\t\ttooltipX = x;\n\t\t\t\t\ttooltipY = y;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Construct a new Rotation object.\n\t * <br><br><dl>\n\t * <dt><b>new Rotation</b>(&lt;float&gt; x, &lt;float&gt; y, &lt;float&gt; z, <float> angle)</dt>\n\t * <dd>where<br>\n\t * x, y, and z are the axis of the rotation. angle is the angle of the rotation (in radians). Missing values default to 0.0, except y, which defaults to 1.0.\n\t * </dd>\n\t * </dl>\n\t * <br><dl>\n\t * <dt><b>new Rotation</b>(&lt;{@link Vec3f}&gt; axis, &lt;float&gt; angle)</dt>\n\t * <dd>where<br>\n\t * axis is the axis of rotation. angle is the angle of the rotation (in radians).\n\t * </dd>\n\t * </dl>\n\t * <br><dl>\n\t * <dt><b>new Rotation</b>(&lt;{@link Vec3f}&gt; fromVector, &lt;{@link Vec3f}&gt; toVector)</dt>\n\t * <dd>where<br>\n\t * fromVector and toVector are normalized and the rotation value that would rotate from the fromVector to the toVector is stored in the object.\n\t * </dd>\n\t * </dl>\n\t * @classdesc The Rotation object corresponds to a VRML SFRotation field. It has four numeric properties: x, y, z (the axis of rotation) and angle.<br>\n\t * @class\n\t * @name Rotation\n\t */\n\tfunction Rotation(/*oVec3f, angle | oVec3f, oVec3f | x, y, z, angle*/)\n\t{\n\t\tif (arguments.length == 4)\n\t\t{\n\t\t\t/**\n\t\t\t * First value of the axis vector\n\t\t\t * @type float\n\t\t\t */\n\t\t\tthis.x = arguments[0];\n\t\t\t/**\n\t\t\t * Second value of the axis vector\n\t\t\t * @type float\n\t\t\t */\n\t\t\tthis.y = arguments[1];\n\t\t\t/**\n\t\t\t * Third value of the axis vector\n\t\t\t * @type float\n\t\t\t */\n\t\t\tthis.z = arguments[2];\n\t\t\t/**\n\t\t\t * The angle of the rotation (in radians)\n\t\t\t * @type float\n\t\t\t */\n\t\t\tthis.angle = arguments[3];\n\t\t}\n\t\telse if(arguments.length == 2)\n\t\t{\n\t\t\tif (typeof(arguments[1]) == 'number')\n\t\t\t{\n\t\t\t\tthis.setAxis(arguments[0]);\n\t\t\t\tthis.angle = arguments[1];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar FLT_EPSILON = 1.192092896e-07,\n\t\t\t\t\tv = arguments[0].normalize(),\n\t\t\t\t\tv1 = arguments[1].normalize(),\n\t\t\t\t\taxis = v.cross(v1),\n\t\t\t\t\tlen = axis.length();\n\t\t\t\tif (len <= FLT_EPSILON)\n\t\t\t\t{\n\t\t\t\t\tif (v.dot(v1) < 0.0)\n\t\t\t\t\t{\n\t\t\t\t\t\taxis = v.cross(new Vec3f(1, 0, 0));\n\t\t\t\t\t\tthis.angle = Math.PI;\n\t\t\t\t\t\tlen = axis.length();\n\t\t\t\t\t\tif (len <= FLT_EPSILON)\n\t\t\t\t\t\t\taxis = v.cross(new Vec3f(0, 1, 0));\n\t\t\t\t\t\taxis = axis.normalize();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\taxis = new Vec3f(0, 1, 0);\n\t\t\t\t\t\tthis.angle = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.angle = Math.atan2(len, v.dot(v1));\n\t\t\t\t\taxis = axis.normalize();\n\t\t\t\t}\n\t\t\t\tthis.setAxis(axis);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.x = 0;\n\t\t\tthis.y = 1;\n\t\t\tthis.z = 0;\n\t\t\tthis.angle = 0;\n\t\t}\n\t}\n\n\tObject.defineProperties(Rotation.prototype,\n\t{\n\t\t'toArray':\n\t\t{\n\t\t\t/**\n\t\t\t * Returns array represents rotations fields [x, y, z, angle]\n\t\t\t * @returns Array of four float\n\t\t\t * @type Array\n\t\t\t * @function Rotation#toArray\n\t\t\t */\n\t\t\tvalue: function()\n\t\t\t{\n\t\t\t\treturn [this.x, this.y, this.z, this.angle];\n\t\t\t}\n\t\t},\n\t\t'multVec':\n\t\t{\n\t\t\t/**\n\t\t\t * Returns the value of oVec3f multiplied by the matrix corresponding to this object's rotation.\n\t\t\t * @param {Vec3f} value The {@link Vec3f} object\n\t\t\t * @type Vec3f\n\t\t\t * @function Rotation#multVec\n\t\t\t */\n\t\t\tvalue: function(value)\n\t\t\t{\n\t\t\t\tvar e = -this.angle;\n\t\t\t\tvar s = Math.sin(e);\n\t\t\t\tvar c = Math.cos(e);\n\t\t\t\t\n\t\t\t\tvar f = this.x;\n\t\t\t\tvar g = this.y;\n\t\t\t\tvar h = this.z;\n\t\t\t\t\n\t\t\t\tvar x = value.x;\n\t\t\t\tvar y = value.y;\n\t\t\t\tvar z = value.z;\n\t\t\t\t\n\t\t\t\tvar p = (f * x + g * y + h * z) * (1 - c);\n\t\t\t\t\n\t\t\t\tvar px = f * p + c * x + s * (h * y - g * z);\n\t\t\t\tvar py = g * p + c * y + s * (f * z - h * x);\n\t\t\t\tvar pz = h * p + c * z + s * (g * x - f * y);\n\t\t\t\treturn new Vec3f(px, py, pz);\n\t\t\t}\n\t\t},\n\t\t'inverse':\n\t\t{\n\t\t\t/**\n\t\t\t * Returns the inverse of this object's rotation.\n\t\t\t * @type Rotation\n\t\t\t * @function Rotation#inverse\n\t\t\t */\n\t\t\tvalue: function()\n\t\t\t{\n\t\t\t\treturn new Rotation(this.x, this.y, this.z, -this.angle);\n\t\t\t}\n\t\t},\n\t\t'multiply':\n\t\t{\n\t\t\t/**\n\t\t\t * Returns the object multiplied by the passed value.\n\t\t\t * @param {Rotation} value The {@link Rotation} object\n\t\t\t * @type Rotation\n\t\t\t * @function Rotation#multiply\n\t\t\t */\n\t\t\tvalue: function(value)\n\t\t\t{\n\t\t\t\tvar angle = value.angle,\n\t\t\t\t\tSa = Math.sin(angle / 2),\n\t\t\t\t\tCa = Math.cos(angle / 2),\n\t\t\t\t\tAs = value.getAxis().multiply(Sa),\n\n\t\t\t\t\tSb = Math.sin(this.angle / 2),\n\t\t\t\t\tCb = Math.cos(this.angle / 2),\n\t\t\t\t\tBs = this.getAxis().multiply(Sb),\n\n\t\t\t\t\tCab = Ca*Cb - As.dot(Bs),\n\n\t\t\t\t\tABs = As.multiply(Cb).add(Bs.multiply(Ca)).add(Bs.cross(As)),\n\n\t\t\t\t\tmsq = ABs.x * ABs.x + ABs.y * ABs.y + ABs.z * ABs.z,\n\n\t\t\t\t\tresult = new Rotation(0, 0, 1, 0),\n\t\t\t\t\tSab;\n\t\t\t\tif (msq != 0)\n\t\t\t\t{\n\t\t\t\t\tSab = Math.sqrt(msq);\n\t\t\t\t\tresult.setAxis(ABs.divide(Sab));\n\t\t\t\t\tresult.angle = 2 * Math.atan2(Sab, Cab);\n\t\t\t\t}    \n\t\t\t\treturn result;\n\t\t\t}\n\t\t},\n\t\t'setAxis':\n\t\t{\n\t\t\t/**\n\t\t\t * Sets the axis of rotation to the value passed in value.\n\t\t\t * @param {Vec3f} value The {@link Vec3f} object\n\t\t\t * @function Rotation#setAxis\n\t\t\t */\n\t\t\tvalue: function (value)\n\t\t\t{\n\t\t\t\tthis.x = value.x;\n\t\t\t\tthis.y = value.y;\n\t\t\t\tthis.z = value.z;\n\t\t\t}\n\t\t},\n\t\t'getAxis':\n\t\t{\n\t\t\t/**\n\t\t\t * Returns the axis of rotation.\n\t\t\t * @type Vec3f\n\t\t\t * @function Rotation#getAxis\n\t\t\t */\n\t\t\tvalue: function()\n\t\t\t{\n\t\t\t\treturn new Vec3f(this.x, this.y, this.z);\n\t\t\t}\n\t\t},\n\t\t'toString':\n\t\t{\n\t\t\t/**\n\t\t\t * Returns a String containing the value of x, y, z, and angle.\n\t\t\t * @type String\n\t\t\t * @function Rotation#toString\n\t\t\t */\n\t\t\tvalue: function()\n\t\t\t{\n\t\t\t\treturn this.toArray().join(' ');\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * Construct a new Vec3f object.\n\t * @classdesc The Vec3f object corresponds to a VRML SFVec3f field. Each component of the vector can be accessed using the x, y, and z properties.\n\t * @param {float} x First value of the vector.\n\t * @param {float} y Second value of the vector.\n\t * @param {float} z Third value of the vector.\n\t * @class\n\t * @name Vec3f\n\t */\n\tfunction Vec3f(x, y, z)\n\t{\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t}\n\n\tObject.defineProperties(Vec3f.prototype,\n\t{\n\t\t'toArray':\n\t\t{\n\t\t\t/**\n\t\t\t * Returns array represents vectors fields [x, y, z]\n\t\t\t * @returns Array of three float\n\t\t\t * @type Array\n\t\t\t * @function Vec3f#toArray\n\t\t\t */\n\t\t\tvalue: function()\n\t\t\t{\n\t\t\t\treturn [this.x, this.y, this.z];\n\t\t\t}\n\t\t},\n\t\t'add':\n\t\t{\n\t\t\t/**\n\t\t\t * Returns the value of the passed value added, component-wise, to the object.\n\t\t\t * @param {Vec3f} value The {@link Vec3f} object\n\t\t\t * @type Vec3f\n\t\t\t * @function Vec3f#add\n\t\t\t */\n\t\t\tvalue: function(value)\n\t\t\t{\n\t\t\t\treturn new Vec3f(value.x + this.x, value.y + this.y, value.z + this.z);\n\t\t\t}\n\t\t},\n\t\t'subtract':\n\t\t{\n\t\t\t/**\n\t\t\t * Returns the value of the passed value subtracted, component-wise, from the object.\n\t\t\t * @param {Vec3f} value The {@link Vec3f} object\n\t\t\t * @type Vec3f\n\t\t\t * @function Vec3f#subtract\n\t\t\t */\n\t\t\tvalue: function(value)\n\t\t\t{\n\t\t\t\treturn new Vec3f(this.x - value.x, this.y - value.y, this.z - value.z);\n\t\t\t}\n\t\t},\n\t\t'dot':\n\t\t{\n\t\t\t/**\n\t\t\t * Returns the dot product of this vector and the passed value.\n\t\t\t * @param {Vec3f} value The {@link Vec3f} object\n\t\t\t * @type float\n\t\t\t * @function Vec3f#dot\n\t\t\t */\n\t\t\tvalue: function(value)\n\t\t\t{\n\t\t\t\treturn (value.x * this.x + value.y * this.y + value.z * this.z);\n\t\t\t}\n\t\t},\n\t\t'cross':\n\t\t{\n\t\t\t/**\n\t\t\t * Returns the cross product of the object and the passed value.\n\t\t\t * @param {Vec3f} value The {@link Vec3f} object\n\t\t\t * @type Vec3f\n\t\t\t * @function Vec3f#cross\n\t\t\t */\n\t\t\tvalue: function(value)\n\t\t\t{\n\t\t\t\treturn new Vec3f(this.y * value.z - value.y * this.z, this.z * value.x - value.z * this.x, this.x * value.y - value.x * this.y);\n\t\t\t}\n\t\t},\n\t\t'divide':\n\t\t{\n\t\t\t/**\n\t\t\t * Returns the value of the object divided by the passed value.\n\t\t\t * @param {float} value\n\t\t\t * @type Vec3f\n\t\t\t * @function Vec3f#divide\n\t\t\t */\n\t\t\tvalue: function(value)\n\t\t\t{\n\t\t\t\treturn new Vec3f(this.x / value, this.y / value, this.z / value);\n\t\t\t}\n\t\t},\n\t\t'multiply':\n\t\t{\n\t\t\t/**\n\t\t\t * Returns the value of the object multiplied by the passed value.\n\t\t\t * @param {float} value\n\t\t\t * @type Vec3f\n\t\t\t * @function Vec3f#multiply\n\t\t\t */\n\t\t\tvalue: function(value)\n\t\t\t{\n\t\t\t\treturn new Vec3f(this.x * value, this.y * value, this.z * value);\n\t\t\t}\n\t\t},\n\t\t'length':\n\t\t{\n\t\t\t/**\n\t\t\t * Returns the geometric length of this vector.\n\t\t\t * @type float\n\t\t\t * @function Vec3f#length\n\t\t\t */\n\t\t\tvalue: function()\n\t\t\t{\n\t\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n\t\t\t}\n\t\t},\n\t\t'normalize':\n\t\t{\n\t\t\t/**\n\t\t\t * Returns the object converted to unit length .\n\t\t\t * @type Vec3f\n\t\t\t * @function Vec3f#normalize\n\t\t\t */\n\t\t\tvalue: function()\n\t\t\t{\n\t\t\t\tvar m = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n\t\t\t\treturn m == 0 ? this : this.divide(m);\n\t\t\t}\n\t\t},\n\t\t'negate':\n\t\t{\n\t\t\t/**\n\t\t\t * Returns the value of the component-wise negation of the object.\n\t\t\t * @type Vec3f\n\t\t\t * @function Vec3f#negate\n\t\t\t */\n\t\t\tvalue: function()\n\t\t\t{\n\t\t\t\treturn new Vec3f(-this.x, -this.y, -this.z);\n\t\t\t}\n\t\t}\n\t});\n\n\t//\n\t// Export:\n\t//\n\tObject.defineProperties(stella,\n\t{\n\t\t'Location': {value: Location, enumerable: true},\n\t\t'Dot': {value: Dot, enumerable: true},\n\t\t'Section': {value: Section, enumerable: true},\n\t\t'Structure': {value: Structure, enumerable: true},\n\t\t'Viewpoint': {value: Viewpoint, enumerable: true},\n\t\t'Model3D': {value: Model3D, enumerable: true},\n\t\t'ATA': {value: ATA, enumerable: true},\n\t\t'AirplaneFuselageLocation': {value: AirplaneFuselageLocation, enumerable: true},\n\t\t'AirplaneBoundBox': {value: AirplaneBoundBox, enumerable: true},\n\t\t'Metadata': {value: Metadata, enumerable: true},\n\t\t'ZSection': {value: ZSection, enumerable: true},\n\t\t'Vec3f': {value: Vec3f, enumerable: true},\n\t\t'Rotation': {value: Rotation, enumerable: true},\n\n\t\t'didInitializeRuntime': \n\t\t{\n\t\t\tvalue: function()\n\t\t\t{\n\t\t\t\tTiramisu.willStartNavigateInScene = function()\n\t\t\t\t{\n\t\t\t\t\tif (theModel.tooltipOver3D)\n\t\t\t\t\t\ttheModel.tooltipOver3D.hide();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n}(Stella));\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = Stella;\n"],"sourceRoot":""}